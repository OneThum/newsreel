{"created": 1761446154.703851, "duration": 2.1105430126190186, "exitcode": 1, "root": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests", "environment": {}, "summary": {"passed": 96, "failed": 18, "skipped": 9, "total": 123, "collected": 123}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "integration/__init__.py", "type": "Package"}, {"nodeid": "system/test_deployed_api.py", "type": "Module"}, {"nodeid": "unit/test_clustering_logic.py", "type": "Module"}, {"nodeid": "unit/test_rss_parsing.py", "type": "Module"}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "type": "Function", "lineno": 49}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "type": "Function", "lineno": 71}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "type": "Function", "lineno": 104}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "type": "Function", "lineno": 119}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "type": "Function", "lineno": 155}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "type": "Function", "lineno": 179}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "type": "Function", "lineno": 190}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "type": "Function", "lineno": 209}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "type": "Function", "lineno": 229}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "type": "Function", "lineno": 268}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "type": "Function", "lineno": 294}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "type": "Function", "lineno": 307}]}, {"nodeid": "integration/test_batch_processing.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "type": "Class"}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "type": "Function", "lineno": 50}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "type": "Function", "lineno": 72}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "type": "Function", "lineno": 98}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "type": "Function", "lineno": 118}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "type": "Function", "lineno": 142}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "type": "Function", "lineno": 159}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "type": "Function", "lineno": 182}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "type": "Function", "lineno": 201}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "type": "Function", "lineno": 221}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "type": "Function", "lineno": 287}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "type": "Function", "lineno": 306}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "type": "Function", "lineno": 333}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "type": "Class"}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "type": "Function", "lineno": 37}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "type": "Function", "lineno": 55}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "type": "Function", "lineno": 83}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "type": "Function", "lineno": 99}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "type": "Function", "lineno": 122}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "type": "Function", "lineno": 145}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "type": "Function", "lineno": 162}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "type": "Function", "lineno": 177}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "type": "Function", "lineno": 193}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "type": "Function", "lineno": 218}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "type": "Function", "lineno": 230}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "type": "Function", "lineno": 247}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "type": "Function", "lineno": 266}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "type": "Function", "lineno": 283}]}, {"nodeid": "integration/test_clustering_to_summarization.py", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "type": "Class"}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "type": "Function", "lineno": 27}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "type": "Function", "lineno": 94}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "type": "Function", "lineno": 132}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "type": "Function", "lineno": 165}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "type": "Function", "lineno": 186}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "type": "Function", "lineno": 218}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "type": "Function", "lineno": 257}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "type": "Function", "lineno": 286}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "type": "Function", "lineno": 316}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "type": "Function", "lineno": 329}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "type": "Function", "lineno": 345}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "type": "Function", "lineno": 367}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "type": "Function", "lineno": 396}]}, {"nodeid": "integration/test_rss_to_clustering.py", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "type": "Class"}]}, {"nodeid": "integration/__init__.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py", "type": "Module"}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "type": "Module"}, {"nodeid": "integration/test_clustering_to_summarization.py", "type": "Module"}, {"nodeid": "integration/test_rss_to_clustering.py", "type": "Module"}]}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "type": "Function", "lineno": 24}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "type": "Function", "lineno": 32}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "type": "Function", "lineno": 52}]}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "type": "Function", "lineno": 91}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "type": "Function", "lineno": 120}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "type": "Function", "lineno": 148}]}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "type": "Function", "lineno": 191}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "type": "Function", "lineno": 216}]}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "type": "Function", "lineno": 263}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "type": "Function", "lineno": 289}]}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "type": "Function", "lineno": 338}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "type": "Function", "lineno": 352}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "type": "Function", "lineno": 358}]}, {"nodeid": "system/test_deployed_api.py", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "type": "Class"}]}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "type": "Function", "lineno": 17}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "type": "Function", "lineno": 23}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "type": "Function", "lineno": 30}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "type": "Function", "lineno": 37}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "type": "Function", "lineno": 44}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "type": "Function", "lineno": 51}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "type": "Function", "lineno": 58}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "type": "Function", "lineno": 65}]}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "type": "Function", "lineno": 78}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "type": "Function", "lineno": 84}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "type": "Function", "lineno": 90}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "type": "Function", "lineno": 96}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "type": "Function", "lineno": 102}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "type": "Function", "lineno": 114}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "type": "Function", "lineno": 125}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "type": "Function", "lineno": 145}]}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "type": "Function", "lineno": 160}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "type": "Function", "lineno": 175}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "type": "Function", "lineno": 184}]}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "type": "Function", "lineno": 199}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "type": "Function", "lineno": 205}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "type": "Function", "lineno": 224}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "type": "Function", "lineno": 242}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "type": "Function", "lineno": 257}]}, {"nodeid": "unit/test_clustering_logic.py", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "type": "Class"}]}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "type": "Function", "lineno": 22}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "type": "Function", "lineno": 28}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "type": "Function", "lineno": 34}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "type": "Function", "lineno": 41}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "type": "Function", "lineno": 48}]}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "type": "Function", "lineno": 59}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "type": "Function", "lineno": 71}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "type": "Function", "lineno": 76}]}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "type": "Function", "lineno": 87}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "type": "Function", "lineno": 94}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "type": "Function", "lineno": 101}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "type": "Function", "lineno": 115}]}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "type": "Function", "lineno": 127}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "type": "Function", "lineno": 134}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "type": "Function", "lineno": 141}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "type": "Function", "lineno": 148}]}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "type": "Function", "lineno": 162}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "type": "Function", "lineno": 168}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "type": "Function", "lineno": 174}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "type": "Function", "lineno": 181}]}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "type": "Function", "lineno": 191}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "type": "Function", "lineno": 206}]}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "type": "Function", "lineno": 222}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "type": "Function", "lineno": 237}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "type": "Function", "lineno": 246}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "type": "Function", "lineno": 256}]}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "type": "Function", "lineno": 271}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "type": "Function", "lineno": 284}]}, {"nodeid": "unit/test_rss_parsing.py", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "type": "Class"}]}], "tests": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "lineno": 21, "outcome": "passed", "keywords": ["test_batch_creation_from_unsummarized_stories", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00325820800000004, "outcome": "passed"}, "call": {"duration": 0.0002623750000000369, "outcome": "passed"}, "teardown": {"duration": 9.300000000000974e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "lineno": 49, "outcome": "passed", "keywords": ["test_batch_size_limits", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016064590000000045, "outcome": "passed"}, "call": {"duration": 0.00014770800000002415, "outcome": "passed"}, "teardown": {"duration": 8.387500000001102e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "lineno": 71, "outcome": "failed", "keywords": ["test_batch_request_format", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001555839999999864, "outcome": "passed"}, "call": {"duration": 0.0002247920000000292, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 95, "message": "AssertionError: assert 3 == 5\n +  where 3 = len([{'custom_id': 'story_1', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_1', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}, {'custom_id': 'story_2', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_2', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}, {'custom_id': 'story_3', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_3', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}])"}, "longrepr": "E   AssertionError: assert 3 == 5\n     +  where 3 = len([{'custom_id': 'story_1', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_1', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}, {'custom_id': 'story_2', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_2', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}, {'custom_id': 'story_3', 'params': {'max_tokens': 300, 'messages': [{'content': 'Summarize story story_3', 'role': 'user'}], 'model': 'claude-3-5-haiku-20241022'}}])"}, "teardown": {"duration": 8.733299999996724e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "lineno": 104, "outcome": "passed", "keywords": ["test_batch_status_polling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016233749999999825, "outcome": "passed"}, "call": {"duration": 0.00011687500000001627, "outcome": "passed"}, "teardown": {"duration": 8.912500000002321e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "lineno": 119, "outcome": "failed", "keywords": ["test_batch_completion_detection", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002055417000000004, "outcome": "passed"}, "call": {"duration": 0.0001239169999999734, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 133, "message": "KeyError: 'succeeded_count'"}, "longrepr": "E   KeyError: 'succeeded_count'"}, "teardown": {"duration": 8.345900000000794e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "lineno": 134, "outcome": "failed", "keywords": ["test_batch_result_extraction", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015187500000002352, "outcome": "passed"}, "call": {"duration": 0.000116333000000024, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 146, "message": "KeyError: 'message'"}, "longrepr": "E   KeyError: 'message'"}, "teardown": {"duration": 8.583299999997962e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "lineno": 155, "outcome": "passed", "keywords": ["test_partial_batch_failure_handling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001330830000000338, "outcome": "passed"}, "call": {"duration": 0.00011200000000000099, "outcome": "passed"}, "teardown": {"duration": 7.558299999999019e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "lineno": 179, "outcome": "failed", "keywords": ["test_batch_cost_calculation", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00022449999999996084, "outcome": "passed"}, "call": {"duration": 0.0001510409999999629, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 187, "message": "AssertionError: assert 'total_cost' in {'id': 'batch_req_123', 'results': [{'custom_id': 'story_1', 'result': {'type': 'succeeded'}}], 'status': 'completed'}"}, "longrepr": "E   AssertionError: assert 'total_cost' in {'id': 'batch_req_123', 'results': [{'custom_id': 'story_1', 'result': {'type': 'succeeded'}}], 'status': 'completed'}"}, "teardown": {"duration": 7.858299999996543e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "lineno": 190, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost_savings", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00012958299999998868, "outcome": "passed"}, "call": {"duration": 0.00011204199999997888, "outcome": "passed"}, "teardown": {"duration": 7.345899999999794e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "lineno": 209, "outcome": "passed", "keywords": ["test_monthly_cost_projection", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00012724999999996767, "outcome": "passed"}, "call": {"duration": 0.00010866700000000673, "outcome": "passed"}, "teardown": {"duration": 7.387500000000102e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "lineno": 229, "outcome": "passed", "keywords": ["test_complete_batch_workflow", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015933340000000018, "outcome": "passed"}, "call": {"duration": 0.00013958299999999868, "outcome": "passed"}, "teardown": {"duration": 8.012499999998646e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "lineno": 268, "outcome": "passed", "keywords": ["test_batch_retry_on_failure", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013120799999999377, "outcome": "passed"}, "call": {"duration": 0.00016729200000004107, "outcome": "passed"}, "teardown": {"duration": 7.466699999997273e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "lineno": 294, "outcome": "passed", "keywords": ["test_batch_processing_latency", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013683300000000287, "outcome": "passed"}, "call": {"duration": 0.00011383299999995211, "outcome": "passed"}, "teardown": {"duration": 7.458399999998866e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "lineno": 307, "outcome": "passed", "keywords": ["test_batch_throughput", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001351669999999916, "outcome": "passed"}, "call": {"duration": 0.00014666699999998922, "outcome": "passed"}, "teardown": {"duration": 8.908299999998981e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "lineno": 21, "outcome": "failed", "keywords": ["test_verified_to_breaking_transition", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017585410000000024, "outcome": "passed"}, "call": {"duration": 0.00015245899999999368, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 41, "message": "KeyError: 'first_seen'"}, "longrepr": "E   KeyError: 'first_seen'"}, "teardown": {"duration": 0.00014454199999996975, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "lineno": 50, "outcome": "passed", "keywords": ["test_monitoring_to_breaking_skip_developing", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016077500000000189, "outcome": "passed"}, "call": {"duration": 0.00012454200000000526, "outcome": "passed"}, "teardown": {"duration": 8.174999999999155e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "lineno": 72, "outcome": "passed", "keywords": ["test_breaking_news_not_triggered_for_slow_stories", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002129250000000027, "outcome": "passed"}, "call": {"duration": 0.0001627500000000448, "outcome": "passed"}, "teardown": {"duration": 8.349999999995861e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "lineno": 98, "outcome": "passed", "keywords": ["test_notification_triggered_on_breaking_status", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001621166999999979, "outcome": "passed"}, "call": {"duration": 0.00011591599999999369, "outcome": "passed"}, "teardown": {"duration": 8.141699999997254e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "lineno": 118, "outcome": "passed", "keywords": ["test_notification_payload_structure", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015095799999997883, "outcome": "passed"}, "call": {"duration": 0.00011375000000002355, "outcome": "passed"}, "teardown": {"duration": 8.295800000002185e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "lineno": 142, "outcome": "passed", "keywords": ["test_notification_deduplication", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016356250000000294, "outcome": "passed"}, "call": {"duration": 0.00011516700000002711, "outcome": "passed"}, "teardown": {"duration": 8.054200000001677e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "lineno": 159, "outcome": "passed", "keywords": ["test_notification_rate_limiting", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001327919999999927, "outcome": "passed"}, "call": {"duration": 0.000114333000000022, "outcome": "passed"}, "teardown": {"duration": 7.962499999997208e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "lineno": 182, "outcome": "failed", "keywords": ["test_breaking_to_verified_demotion", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016065829999999948, "outcome": "passed"}, "call": {"duration": 0.00017241699999998028, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 189, "message": "KeyError: 'breaking_triggered_at'"}, "longrepr": "E   KeyError: 'breaking_triggered_at'"}, "teardown": {"duration": 8.562500000003359e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "lineno": 201, "outcome": "passed", "keywords": ["test_verified_to_archived_lifecycle", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0020358750000000203, "outcome": "passed"}, "call": {"duration": 0.00012383399999998934, "outcome": "passed"}, "teardown": {"duration": 7.729200000000658e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "lineno": 221, "outcome": "passed", "keywords": ["test_complete_story_lifecycle_flow", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015978340000000202, "outcome": "passed"}, "call": {"duration": 0.00011366699999998398, "outcome": "passed"}, "teardown": {"duration": 7.937500000004816e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "lineno": 267, "outcome": "passed", "keywords": ["test_twitter_trending_check", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013250000000003537, "outcome": "passed"}, "call": {"duration": 0.00011120800000002928, "outcome": "passed"}, "teardown": {"duration": 7.537499999998865e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "lineno": 287, "outcome": "passed", "keywords": ["test_twitter_volume_threshold", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013116599999996037, "outcome": "passed"}, "call": {"duration": 0.00010991700000001492, "outcome": "passed"}, "teardown": {"duration": 7.358299999998819e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "lineno": 306, "outcome": "passed", "keywords": ["test_breaking_news_detection_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001555583000000027, "outcome": "passed"}, "call": {"duration": 0.0001182909999999926, "outcome": "passed"}, "teardown": {"duration": 8.050000000003887e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "lineno": 333, "outcome": "passed", "keywords": ["test_notification_send_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013095800000001434, "outcome": "passed"}, "call": {"duration": 0.00011441699999997779, "outcome": "passed"}, "teardown": {"duration": 8.287499999998227e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "lineno": 21, "outcome": "passed", "keywords": ["test_verified_story_triggers_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001635291999999955, "outcome": "passed"}, "call": {"duration": 0.00017291699999999466, "outcome": "passed"}, "teardown": {"duration": 9.991700000000492e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "lineno": 37, "outcome": "passed", "keywords": ["test_developing_story_no_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0018084999999999907, "outcome": "passed"}, "call": {"duration": 0.00012937499999998714, "outcome": "passed"}, "teardown": {"duration": 8.737500000000065e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "lineno": 55, "outcome": "passed", "keywords": ["test_summary_prompt_construction", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016062499999996982, "outcome": "passed"}, "call": {"duration": 0.00012208399999996677, "outcome": "passed"}, "teardown": {"duration": 8.11669999999931e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "lineno": 83, "outcome": "passed", "keywords": ["test_summary_stored_in_cluster", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0021056669999999778, "outcome": "passed"}, "call": {"duration": 0.00015529100000000184, "outcome": "passed"}, "teardown": {"duration": 9.845800000002347e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "lineno": 99, "outcome": "passed", "keywords": ["test_headline_regeneration_on_source_addition", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017982080000000233, "outcome": "passed"}, "call": {"duration": 0.00014137499999999914, "outcome": "passed"}, "teardown": {"duration": 8.708399999995953e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "lineno": 122, "outcome": "failed", "keywords": ["test_cost_tracking_for_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016725000000000767, "outcome": "passed"}, "call": {"duration": 0.00014666699999998922, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_clustering_to_summarization.py", "lineno": 128, "message": "KeyError: 'usage'"}, "longrepr": "E   KeyError: 'usage'"}, "teardown": {"duration": 8.254099999999154e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "lineno": 145, "outcome": "passed", "keywords": ["test_real_time_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016342919999999816, "outcome": "passed"}, "call": {"duration": 0.00011566700000004149, "outcome": "passed"}, "teardown": {"duration": 8.041599999997207e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "lineno": 162, "outcome": "failed", "keywords": ["test_batch_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015820000000000278, "outcome": "passed"}, "call": {"duration": 0.0001978329999999806, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_clustering_to_summarization.py", "lineno": 171, "message": "AssertionError: assert 'anthropic_batch_id' in {'batch_id': 'batch_ant_20251026_001', 'id': 'batch_req_123', 'status': 'submitted', 'story_ids': ['story_1', 'story_2', 'story_3'], ...}"}, "longrepr": "E   AssertionError: assert 'anthropic_batch_id' in {'batch_id': 'batch_ant_20251026_001', 'id': 'batch_req_123', 'status': 'submitted', 'story_ids': ['story_1', 'story_2', 'story_3'], ...}"}, "teardown": {"duration": 0.00010412500000001046, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "lineno": 177, "outcome": "failed", "keywords": ["test_batch_result_processing", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002329291999999983, "outcome": "passed"}, "call": {"duration": 0.00021295900000001255, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_clustering_to_summarization.py", "lineno": 189, "message": "AssertionError: assert 1 == 3\n +  where 1 = len([{'custom_id': 'story_1', 'result': {'type': 'succeeded'}}])"}, "longrepr": "E   AssertionError: assert 1 == 3\n     +  where 1 = len([{'custom_id': 'story_1', 'result': {'type': 'succeeded'}}])"}, "teardown": {"duration": 8.974999999999955e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "lineno": 193, "outcome": "passed", "keywords": ["test_summary_fallback_on_ai_refusal", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016771660000000077, "outcome": "passed"}, "call": {"duration": 0.00012333300000000325, "outcome": "passed"}, "teardown": {"duration": 8.24590000000347e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "lineno": 218, "outcome": "failed", "keywords": ["test_summary_length_validation", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015520799999996227, "outcome": "passed"}, "call": {"duration": 0.00014612499999999695, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_clustering_to_summarization.py", "lineno": 229, "message": "AssertionError: Summary should have 2-4 sentences\nassert 2 <= 0"}, "longrepr": "E   AssertionError: Summary should have 2-4 sentences\n    assert 2 <= 0"}, "teardown": {"duration": 8.829200000004533e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "lineno": 230, "outcome": "passed", "keywords": ["test_summary_includes_key_information", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015320800000001578, "outcome": "passed"}, "call": {"duration": 0.0001123749999999979, "outcome": "passed"}, "teardown": {"duration": 7.550000000000612e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "lineno": 247, "outcome": "passed", "keywords": ["test_summary_prompt_cache_usage", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013558299999999468, "outcome": "passed"}, "call": {"duration": 0.00010866700000000673, "outcome": "passed"}, "teardown": {"duration": 7.370800000000566e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "lineno": 266, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001344590000000312, "outcome": "passed"}, "call": {"duration": 0.00010895900000001957, "outcome": "passed"}, "teardown": {"duration": 7.525000000002668e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "lineno": 283, "outcome": "passed", "keywords": ["test_summarization_rate_limit", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001311669999999876, "outcome": "passed"}, "call": {"duration": 0.00010962500000000208, "outcome": "passed"}, "teardown": {"duration": 7.454200000001077e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "lineno": 27, "outcome": "failed", "keywords": ["test_new_article_creates_new_cluster", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016465829999999793, "outcome": "passed"}, "call": {"duration": 0.0003715000000000246, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_rss_to_clustering.py", "lineno": 86, "message": "AssertionError: assert 'general' in ['world', 'us', 'tech', 'business', 'sports', 'science', ...]"}, "longrepr": "E   AssertionError: assert 'general' in ['world', 'us', 'tech', 'business', 'sports', 'science', ...]"}, "teardown": {"duration": 9.187500000001902e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "lineno": 94, "outcome": "failed", "keywords": ["test_similar_article_clusters_with_existing", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016734170000000104, "outcome": "passed"}, "call": {"duration": 0.0002542500000000114, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_rss_to_clustering.py", "lineno": 128, "message": "AssertionError: Similarity 0.5925925925925926 should be >= 0.7\nassert 0.5925925925925926 >= 0.7"}, "longrepr": "E   AssertionError: Similarity 0.5925925925925926 should be >= 0.7\n    assert 0.5925925925925926 >= 0.7"}, "teardown": {"duration": 8.299999999999974e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "lineno": 132, "outcome": "passed", "keywords": ["test_duplicate_source_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002108833000000032, "outcome": "passed"}, "call": {"duration": 0.00011958299999997868, "outcome": "passed"}, "teardown": {"duration": 7.866700000003224e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "lineno": 165, "outcome": "failed", "keywords": ["test_cross_category_clustering_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016017500000000129, "outcome": "passed"}, "call": {"duration": 0.001084082999999958, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_rss_to_clustering.py", "lineno": 185, "message": "AssertionError: Tech and sports should conflict\nassert False"}, "longrepr": "E   AssertionError: Tech and sports should conflict\n    assert False"}, "teardown": {"duration": 8.704199999998163e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "lineno": 186, "outcome": "failed", "keywords": ["test_entity_based_matching", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015944999999999987, "outcome": "passed"}, "call": {"duration": 0.00020799999999998597, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_rss_to_clustering.py", "lineno": 207, "message": "TypeError: 'Entity' object is not subscriptable"}, "longrepr": "E   TypeError: 'Entity' object is not subscriptable"}, "teardown": {"duration": 8.099999999999774e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "lineno": 218, "outcome": "passed", "keywords": ["test_full_rss_to_cluster_pipeline", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015847090000000175, "outcome": "passed"}, "call": {"duration": 0.0010639170000000253, "outcome": "passed"}, "teardown": {"duration": 8.529199999995907e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "lineno": 257, "outcome": "failed", "keywords": ["test_multiple_articles_same_story", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015952499999999925, "outcome": "passed"}, "call": {"duration": 0.0009032499999999666, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_rss_to_clustering.py", "lineno": 285, "message": "AssertionError: Similarity 0.3287671232876712 should indicate same story\nassert 0.3287671232876712 >= 0.5"}, "longrepr": "E   AssertionError: Similarity 0.3287671232876712 should indicate same story\n    assert 0.3287671232876712 >= 0.5"}, "teardown": {"duration": 8.195799999999309e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "lineno": 286, "outcome": "passed", "keywords": ["test_story_status_progression", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015657090000000262, "outcome": "passed"}, "call": {"duration": 0.00012024999999998842, "outcome": "passed"}, "teardown": {"duration": 7.991599999995769e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "lineno": 316, "outcome": "passed", "keywords": ["test_invalid_feed_handling", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013720799999999977, "outcome": "passed"}, "call": {"duration": 0.0003374999999999906, "outcome": "passed"}, "teardown": {"duration": 8.03750000000214e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "lineno": 329, "outcome": "passed", "keywords": ["test_missing_required_fields", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013524999999997567, "outcome": "passed"}, "call": {"duration": 0.00011129200000004058, "outcome": "passed"}, "teardown": {"duration": 7.450000000003287e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "lineno": 345, "outcome": "passed", "keywords": ["test_html_cleaning_in_pipeline", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013945900000000844, "outcome": "passed"}, "call": {"duration": 0.0001262910000000006, "outcome": "passed"}, "teardown": {"duration": 8.191700000004243e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "lineno": 367, "outcome": "passed", "keywords": ["test_clustering_100_articles", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016599589999999886, "outcome": "passed"}, "call": {"duration": 0.0011577499999999574, "outcome": "passed"}, "teardown": {"duration": 9.375000000000355e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "lineno": 396, "outcome": "passed", "keywords": ["test_fuzzy_matching_performance", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015941699999999503, "outcome": "passed"}, "call": {"duration": 0.04375049999999997, "outcome": "passed"}, "teardown": {"duration": 0.00011979200000000745, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "lineno": 24, "outcome": "passed", "keywords": ["test_api_is_reachable", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00017812500000002895, "outcome": "passed"}, "call": {"duration": 0.734014542, "outcome": "passed"}, "teardown": {"duration": 0.00012583399999988032, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "lineno": 32, "outcome": "failed", "keywords": ["test_stories_endpoint_returns_data", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001846249999999383, "outcome": "passed"}, "call": {"duration": 0.43253754199999994, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 37, "message": "AssertionError: Endpoint returned 403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code"}, "longrepr": "E   AssertionError: Endpoint returned 403\n    assert 403 == 200\n     +  where 403 = <Response [403]>.status_code"}, "teardown": {"duration": 0.00018520799999999227, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "lineno": 52, "outcome": "failed", "keywords": ["test_stories_are_recent", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00022408299999998604, "outcome": "passed"}, "call": {"duration": 0.5683064590000002, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 59, "message": "AssertionError: No stories to check\nassert 0 > 0\n +  where 0 = len([])"}, "longrepr": "E   AssertionError: No stories to check\n    assert 0 > 0\n     +  where 0 = len([])"}, "teardown": {"duration": 0.00012649999999991834, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "lineno": 91, "outcome": "skipped", "keywords": ["test_articles_are_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001921670000002429, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 92, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.741700000003405e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "lineno": 120, "outcome": "skipped", "keywords": ["test_rss_ingestion_rate", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001488339999999866, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 121, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.037499999957731e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "lineno": 148, "outcome": "skipped", "keywords": ["test_multiple_sources_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00014916599999992286, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 149, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.00014274999999974725, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "lineno": 191, "outcome": "skipped", "keywords": ["test_stories_are_being_created", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00014687499999999076, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 192, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.895800000001785e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "lineno": 216, "outcome": "skipped", "keywords": ["test_stories_have_multiple_sources", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001419160000000197, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 217, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.020900000005327e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "lineno": 263, "outcome": "skipped", "keywords": ["test_summaries_are_being_generated", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001445419999996922, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 264, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.708300000031088e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "lineno": 289, "outcome": "skipped", "keywords": ["test_summary_coverage_rate", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00021308299999978075, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 290, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.07499999999628e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "lineno": 338, "outcome": "failed", "keywords": ["test_function_app_is_deployed", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001238749999998845, "outcome": "passed"}, "call": {"duration": 0.017026041999999908, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 349, "message": "Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x10c8b02b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "longrepr": "E   socket.gaierror: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\nE   urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x10c8b02b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x10c8b02b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nE   requests.exceptions.ConnectionError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x10c8b02b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nE   Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x10c8b02b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "teardown": {"duration": 9.545800000010374e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "lineno": 352, "outcome": "skipped", "keywords": ["test_rss_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00014237499999980585, "outcome": "passed"}, "call": {"duration": 7.44169999999933e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 357, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 7.829199999997982e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "lineno": 358, "outcome": "skipped", "keywords": ["test_clustering_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00012595799999992607, "outcome": "passed"}, "call": {"duration": 6.912500000000321e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 361, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 8.22910000000121e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "lineno": 17, "outcome": "passed", "keywords": ["test_identical_titles_high_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012549999999977857, "outcome": "passed"}, "call": {"duration": 8.30409999998949e-05, "outcome": "passed"}, "teardown": {"duration": 7.312500000011823e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "lineno": 23, "outcome": "passed", "keywords": ["test_very_similar_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011958399999967284, "outcome": "passed"}, "call": {"duration": 7.370799999995015e-05, "outcome": "passed"}, "teardown": {"duration": 7.287500000030533e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "lineno": 30, "outcome": "passed", "keywords": ["test_related_but_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00019008300000011857, "outcome": "passed"}, "call": {"duration": 9.241699999984476e-05, "outcome": "passed"}, "teardown": {"duration": 8.258300000019148e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "lineno": 37, "outcome": "passed", "keywords": ["test_unrelated_titles_low_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001238749999998845, "outcome": "passed"}, "call": {"duration": 7.162499999990857e-05, "outcome": "passed"}, "teardown": {"duration": 7.220900000026731e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "lineno": 44, "outcome": "passed", "keywords": ["test_completely_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001189579999998358, "outcome": "passed"}, "call": {"duration": 7.066700000013526e-05, "outcome": "passed"}, "teardown": {"duration": 8.108400000006455e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "lineno": 51, "outcome": "passed", "keywords": ["test_similarity_with_word_order_change", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012612499999997695, "outcome": "passed"}, "call": {"duration": 7.358399999990439e-05, "outcome": "passed"}, "teardown": {"duration": 7.42919999998648e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "lineno": 58, "outcome": "passed", "keywords": ["test_similarity_case_insensitive", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011820900000003576, "outcome": "passed"}, "call": {"duration": 6.891599999958586e-05, "outcome": "passed"}, "teardown": {"duration": 7.225000000010695e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "lineno": 65, "outcome": "passed", "keywords": ["test_similarity_with_extra_words", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012179100000020426, "outcome": "passed"}, "call": {"duration": 7.408299999989154e-05, "outcome": "passed"}, "teardown": {"duration": 7.41669999997363e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "lineno": 78, "outcome": "passed", "keywords": ["test_crime_vs_health_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011658300000005895, "outcome": "passed"}, "call": {"duration": 8.891599999971689e-05, "outcome": "passed"}, "teardown": {"duration": 7.183299999979909e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "lineno": 84, "outcome": "passed", "keywords": ["test_politics_vs_sports_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001165420000002193, "outcome": "passed"}, "call": {"duration": 7.424999999994242e-05, "outcome": "passed"}, "teardown": {"duration": 7.183400000032591e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "lineno": 90, "outcome": "passed", "keywords": ["test_business_vs_weather_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011537500000002865, "outcome": "passed"}, "call": {"duration": 7.662500000016337e-05, "outcome": "passed"}, "teardown": {"duration": 7.275000000017684e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "lineno": 96, "outcome": "passed", "keywords": ["test_same_topic_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001188330000001514, "outcome": "passed"}, "call": {"duration": 7.41670000001804e-05, "outcome": "passed"}, "teardown": {"duration": 7.17909999998767e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "lineno": 102, "outcome": "passed", "keywords": ["test_no_topic_keywords_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011604200000014941, "outcome": "passed"}, "call": {"duration": 7.362500000018812e-05, "outcome": "passed"}, "teardown": {"duration": 7.179199999995944e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "lineno": 108, "outcome": "passed", "keywords": ["test_one_topic_vs_none_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011554199999963544, "outcome": "passed"}, "call": {"duration": 7.591600000012022e-05, "outcome": "passed"}, "teardown": {"duration": 7.445899999991568e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "lineno": 114, "outcome": "passed", "keywords": ["test_medical_vs_political_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011616700000027791, "outcome": "passed"}, "call": {"duration": 7.400000000012952e-05, "outcome": "passed"}, "teardown": {"duration": 7.241700000015783e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "lineno": 125, "outcome": "passed", "keywords": ["test_threshold_75_percent", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011650000000029692, "outcome": "passed"}, "call": {"duration": 8.22910000000121e-05, "outcome": "passed"}, "teardown": {"duration": 7.262500000004835e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "lineno": 145, "outcome": "passed", "keywords": ["test_edge_cases_near_threshold", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001160840000000718, "outcome": "passed"}, "call": {"duration": 7.766699999978144e-05, "outcome": "passed"}, "teardown": {"duration": 7.312500000011823e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "lineno": 160, "outcome": "passed", "keywords": ["test_exact_match_via_fingerprint", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011795799999969603, "outcome": "passed"}, "call": {"duration": 0.0001451249999999682, "outcome": "passed"}, "teardown": {"duration": 7.904199999986261e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "lineno": 175, "outcome": "passed", "keywords": ["test_fuzzy_match_required_for_variations", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012033399999999972, "outcome": "passed"}, "call": {"duration": 7.21659999998181e-05, "outcome": "passed"}, "teardown": {"duration": 7.29590000001501e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "lineno": 184, "outcome": "passed", "keywords": ["test_no_match_for_different_events", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011962499999995657, "outcome": "passed"}, "call": {"duration": 8.762499999992457e-05, "outcome": "passed"}, "teardown": {"duration": 7.40420000000519e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "lineno": 199, "outcome": "passed", "keywords": ["test_extract_source_from_article_id", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013149999999972906, "outcome": "passed"}, "call": {"duration": 6.295800000000185e-05, "outcome": "passed"}, "teardown": {"duration": 7.179199999995944e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "lineno": 205, "outcome": "passed", "keywords": ["test_identify_duplicate_sources_in_cluster", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011366699999992846, "outcome": "passed"}, "call": {"duration": 7.266600000033208e-05, "outcome": "passed"}, "teardown": {"duration": 7.220899999982322e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "lineno": 224, "outcome": "passed", "keywords": ["test_unique_sources_only", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011458300000022348, "outcome": "passed"}, "call": {"duration": 6.470900000010715e-05, "outcome": "passed"}, "teardown": {"duration": 7.258300000012596e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "lineno": 242, "outcome": "passed", "keywords": ["test_similarity_calculation_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001163339999998847, "outcome": "passed"}, "call": {"duration": 0.0008529999999997706, "outcome": "passed"}, "teardown": {"duration": 7.712499999978917e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "lineno": 257, "outcome": "passed", "keywords": ["test_topic_conflict_check_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001188749999996297, "outcome": "passed"}, "call": {"duration": 0.00665879200000008, "outcome": "passed"}, "teardown": {"duration": 9.537499999989763e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "lineno": 22, "outcome": "passed", "keywords": ["test_clean_simple_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014650000000004937, "outcome": "passed"}, "call": {"duration": 8.020799999997053e-05, "outcome": "passed"}, "teardown": {"duration": 7.637500000035047e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "lineno": 28, "outcome": "passed", "keywords": ["test_clean_nested_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013037499999990487, "outcome": "passed"}, "call": {"duration": 7.045900000024474e-05, "outcome": "passed"}, "teardown": {"duration": 7.633399999962265e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "lineno": 34, "outcome": "passed", "keywords": ["test_clean_html_entities", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012416700000006387, "outcome": "passed"}, "call": {"duration": 9.124999999965411e-05, "outcome": "passed"}, "teardown": {"duration": 7.320799999988026e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "lineno": 41, "outcome": "passed", "keywords": ["test_clean_with_newlines", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011958400000011693, "outcome": "passed"}, "call": {"duration": 6.695800000011687e-05, "outcome": "passed"}, "teardown": {"duration": 7.20409999996896e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "lineno": 48, "outcome": "passed", "keywords": ["test_clean_empty_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011599999999978294, "outcome": "passed"}, "call": {"duration": 6.733300000005826e-05, "outcome": "passed"}, "teardown": {"duration": 7.299999999998974e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "lineno": 59, "outcome": "passed", "keywords": ["test_extract_location_entities", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012458399999992764, "outcome": "passed"}, "call": {"duration": 0.0001352080000001088, "outcome": "passed"}, "teardown": {"duration": 8.308299999981728e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "lineno": 71, "outcome": "passed", "keywords": ["test_extract_from_empty_text", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014604200000034595, "outcome": "passed"}, "call": {"duration": 7.045899999980065e-05, "outcome": "passed"}, "teardown": {"duration": 7.929100000003686e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "lineno": 76, "outcome": "passed", "keywords": ["test_extract_with_special_characters", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012491699999994665, "outcome": "passed"}, "call": {"duration": 8.170800000018019e-05, "outcome": "passed"}, "teardown": {"duration": 7.54999999998951e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "lineno": 87, "outcome": "passed", "keywords": ["test_categorize_tech_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001238749999998845, "outcome": "passed"}, "call": {"duration": 0.00010691700000009519, "outcome": "passed"}, "teardown": {"duration": 7.445900000035977e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "lineno": 94, "outcome": "passed", "keywords": ["test_categorize_business_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012145799999974116, "outcome": "passed"}, "call": {"duration": 9.116700000033617e-05, "outcome": "passed"}, "teardown": {"duration": 7.341600000021486e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "lineno": 101, "outcome": "passed", "keywords": ["test_categorize_health_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011766700000004349, "outcome": "passed"}, "call": {"duration": 9.116699999989208e-05, "outcome": "passed"}, "teardown": {"duration": 7.291600000014498e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "lineno": 108, "outcome": "passed", "keywords": ["test_categorize_sports_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012029200000007734, "outcome": "passed"}, "call": {"duration": 8.879200000011522e-05, "outcome": "passed"}, "teardown": {"duration": 7.220799999974048e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "lineno": 115, "outcome": "passed", "keywords": ["test_categorize_fallback_to_general", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011908399999960295, "outcome": "passed"}, "call": {"duration": 0.0001029579999998198, "outcome": "passed"}, "teardown": {"duration": 7.47500000000123e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "lineno": 127, "outcome": "passed", "keywords": ["test_detect_product_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011929199999993756, "outcome": "passed"}, "call": {"duration": 0.00042062499999984126, "outcome": "passed"}, "teardown": {"duration": 8.579199999969589e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "lineno": 134, "outcome": "passed", "keywords": ["test_detect_sponsored_content", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014037499999997038, "outcome": "passed"}, "call": {"duration": 0.00010637500000010292, "outcome": "passed"}, "teardown": {"duration": 7.704200000002714e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "lineno": 141, "outcome": "passed", "keywords": ["test_legitimate_article_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012549999999977857, "outcome": "passed"}, "call": {"duration": 0.0007298340000003734, "outcome": "passed"}, "teardown": {"duration": 8.087500000009129e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "lineno": 148, "outcome": "passed", "keywords": ["test_news_about_products_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012587500000016405, "outcome": "passed"}, "call": {"duration": 0.001305542000000326, "outcome": "passed"}, "teardown": {"duration": 8.633400000013225e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "lineno": 162, "outcome": "passed", "keywords": ["test_truncate_long_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001330420000003052, "outcome": "passed"}, "call": {"duration": 0.00014433299999971894, "outcome": "passed"}, "teardown": {"duration": 7.57080000002297e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "lineno": 168, "outcome": "passed", "keywords": ["test_truncate_short_text_unchanged", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012187500000004903, "outcome": "passed"}, "call": {"duration": 6.695799999967278e-05, "outcome": "passed"}, "teardown": {"duration": 7.445899999991568e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "lineno": 174, "outcome": "passed", "keywords": ["test_truncate_at_word_boundary", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012262499999993182, "outcome": "passed"}, "call": {"duration": 7.508400000011406e-05, "outcome": "passed"}, "teardown": {"duration": 7.650000000003487e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "lineno": 181, "outcome": "passed", "keywords": ["test_truncate_empty_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012137499999997914, "outcome": "passed"}, "call": {"duration": 6.308300000013034e-05, "outcome": "passed"}, "teardown": {"duration": 7.604199999988737e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "lineno": 191, "outcome": "passed", "keywords": ["test_generate_article_id", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001277919999997934, "outcome": "passed"}, "call": {"duration": 9.033299999972044e-05, "outcome": "passed"}, "teardown": {"duration": 7.700000000010476e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "lineno": 206, "outcome": "passed", "keywords": ["test_generate_different_ids_for_different_urls", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012616699999989933, "outcome": "passed"}, "call": {"duration": 8.570899999993387e-05, "outcome": "passed"}, "teardown": {"duration": 7.837500000018593e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "lineno": 222, "outcome": "passed", "keywords": ["test_generate_story_fingerprint", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011920900000017554, "outcome": "passed"}, "call": {"duration": 7.833300000026355e-05, "outcome": "passed"}, "teardown": {"duration": 7.374999999987253e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "lineno": 237, "outcome": "passed", "keywords": ["test_fingerprint_consistency", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012537500000009416, "outcome": "passed"}, "call": {"duration": 7.60830000001711e-05, "outcome": "passed"}, "teardown": {"duration": 7.304099999982938e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "lineno": 246, "outcome": "passed", "keywords": ["test_fingerprint_different_for_different_titles", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012100000000003774, "outcome": "passed"}, "call": {"duration": 7.633400000006674e-05, "outcome": "passed"}, "teardown": {"duration": 7.350000000005963e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "lineno": 256, "outcome": "passed", "keywords": ["test_fingerprint_normalizes_case", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011887500000007378, "outcome": "passed"}, "call": {"duration": 7.104199999963257e-05, "outcome": "passed"}, "teardown": {"duration": 7.262500000004835e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "lineno": 271, "outcome": "passed", "keywords": ["test_parse_rfc822_date", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012499999999970868, "outcome": "passed"}, "call": {"duration": 8.379199999986042e-05, "outcome": "passed"}, "teardown": {"duration": 9.712499999992019e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "lineno": 284, "outcome": "passed", "keywords": ["test_parse_missing_date_returns_now", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012575000000003556, "outcome": "passed"}, "call": {"duration": 9.158299999967312e-05, "outcome": "passed"}, "teardown": {"duration": 0.0004921250000000654, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}]}