{"created": 1761494776.8196852, "duration": 5.273397207260132, "exitcode": 1, "root": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests", "environment": {}, "summary": {"passed": 112, "failed": 2, "skipped": 9, "total": 123, "collected": 123}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "integration/__init__.py", "type": "Package"}, {"nodeid": "system/test_deployed_api.py", "type": "Module"}, {"nodeid": "unit/test_clustering_logic.py", "type": "Module"}, {"nodeid": "unit/test_rss_parsing.py", "type": "Module"}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "type": "Function", "lineno": 49}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "type": "Function", "lineno": 71}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "type": "Function", "lineno": 104}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "type": "Function", "lineno": 119}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "type": "Function", "lineno": 155}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "type": "Function", "lineno": 179}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "type": "Function", "lineno": 190}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "type": "Function", "lineno": 209}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "type": "Function", "lineno": 229}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "type": "Function", "lineno": 268}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "type": "Function", "lineno": 294}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "type": "Function", "lineno": 307}]}, {"nodeid": "integration/test_batch_processing.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "type": "Class"}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "type": "Function", "lineno": 50}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "type": "Function", "lineno": 72}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "type": "Function", "lineno": 98}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "type": "Function", "lineno": 118}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "type": "Function", "lineno": 142}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "type": "Function", "lineno": 159}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "type": "Function", "lineno": 182}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "type": "Function", "lineno": 201}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "type": "Function", "lineno": 221}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "type": "Function", "lineno": 287}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "type": "Function", "lineno": 306}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "type": "Function", "lineno": 333}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "type": "Class"}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "type": "Function", "lineno": 37}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "type": "Function", "lineno": 55}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "type": "Function", "lineno": 83}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "type": "Function", "lineno": 99}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "type": "Function", "lineno": 122}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "type": "Function", "lineno": 146}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "type": "Function", "lineno": 163}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "type": "Function", "lineno": 178}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "type": "Function", "lineno": 194}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "type": "Function", "lineno": 219}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "type": "Function", "lineno": 231}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "type": "Function", "lineno": 248}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "type": "Function", "lineno": 284}]}, {"nodeid": "integration/test_clustering_to_summarization.py", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "type": "Class"}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "type": "Function", "lineno": 27}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "type": "Function", "lineno": 95}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "type": "Function", "lineno": 167}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "type": "Function", "lineno": 189}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "type": "Function", "lineno": 221}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "type": "Function", "lineno": 260}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "type": "Function", "lineno": 291}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "type": "Function", "lineno": 321}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "type": "Function", "lineno": 334}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "type": "Function", "lineno": 350}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "type": "Function", "lineno": 372}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "type": "Function", "lineno": 401}]}, {"nodeid": "integration/test_rss_to_clustering.py", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "type": "Class"}]}, {"nodeid": "integration/__init__.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py", "type": "Module"}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "type": "Module"}, {"nodeid": "integration/test_clustering_to_summarization.py", "type": "Module"}, {"nodeid": "integration/test_rss_to_clustering.py", "type": "Module"}]}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "type": "Function", "lineno": 32}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "type": "Function", "lineno": 40}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "type": "Function", "lineno": 60}]}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "type": "Function", "lineno": 99}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "type": "Function", "lineno": 128}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "type": "Function", "lineno": 156}]}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "type": "Function", "lineno": 199}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "type": "Function", "lineno": 224}]}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "type": "Function", "lineno": 271}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "type": "Function", "lineno": 297}]}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "type": "Function", "lineno": 346}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "type": "Function", "lineno": 360}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "type": "Function", "lineno": 366}]}, {"nodeid": "system/test_deployed_api.py", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "type": "Class"}]}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "type": "Function", "lineno": 17}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "type": "Function", "lineno": 23}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "type": "Function", "lineno": 30}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "type": "Function", "lineno": 37}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "type": "Function", "lineno": 44}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "type": "Function", "lineno": 51}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "type": "Function", "lineno": 58}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "type": "Function", "lineno": 65}]}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "type": "Function", "lineno": 78}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "type": "Function", "lineno": 84}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "type": "Function", "lineno": 90}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "type": "Function", "lineno": 96}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "type": "Function", "lineno": 102}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "type": "Function", "lineno": 114}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "type": "Function", "lineno": 125}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "type": "Function", "lineno": 145}]}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "type": "Function", "lineno": 160}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "type": "Function", "lineno": 175}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "type": "Function", "lineno": 184}]}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "type": "Function", "lineno": 199}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "type": "Function", "lineno": 205}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "type": "Function", "lineno": 224}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "type": "Function", "lineno": 242}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "type": "Function", "lineno": 257}]}, {"nodeid": "unit/test_clustering_logic.py", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "type": "Class"}]}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "type": "Function", "lineno": 22}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "type": "Function", "lineno": 28}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "type": "Function", "lineno": 34}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "type": "Function", "lineno": 41}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "type": "Function", "lineno": 48}]}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "type": "Function", "lineno": 59}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "type": "Function", "lineno": 71}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "type": "Function", "lineno": 76}]}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "type": "Function", "lineno": 87}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "type": "Function", "lineno": 94}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "type": "Function", "lineno": 101}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "type": "Function", "lineno": 115}]}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "type": "Function", "lineno": 127}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "type": "Function", "lineno": 134}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "type": "Function", "lineno": 141}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "type": "Function", "lineno": 148}]}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "type": "Function", "lineno": 162}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "type": "Function", "lineno": 168}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "type": "Function", "lineno": 174}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "type": "Function", "lineno": 181}]}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "type": "Function", "lineno": 191}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "type": "Function", "lineno": 206}]}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "type": "Function", "lineno": 222}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "type": "Function", "lineno": 237}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "type": "Function", "lineno": 246}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "type": "Function", "lineno": 256}]}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "type": "Function", "lineno": 271}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "type": "Function", "lineno": 284}]}, {"nodeid": "unit/test_rss_parsing.py", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "type": "Class"}]}], "tests": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "lineno": 21, "outcome": "passed", "keywords": ["test_batch_creation_from_unsummarized_stories", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0033212089999999916, "outcome": "passed"}, "call": {"duration": 0.0003488749999999152, "outcome": "passed"}, "teardown": {"duration": 0.00010508300000000581, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "lineno": 49, "outcome": "passed", "keywords": ["test_batch_size_limits", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017544579999999588, "outcome": "passed"}, "call": {"duration": 0.00017375000000008356, "outcome": "passed"}, "teardown": {"duration": 9.425000000007344e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "lineno": 71, "outcome": "passed", "keywords": ["test_batch_request_format", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016720799999991875, "outcome": "passed"}, "call": {"duration": 0.0001228340000000161, "outcome": "passed"}, "teardown": {"duration": 8.470900000001613e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "lineno": 104, "outcome": "passed", "keywords": ["test_batch_status_polling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0021383750000000257, "outcome": "passed"}, "call": {"duration": 0.00017566700000004598, "outcome": "passed"}, "teardown": {"duration": 0.00010470800000006442, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "lineno": 119, "outcome": "passed", "keywords": ["test_batch_completion_detection", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017925829999999587, "outcome": "passed"}, "call": {"duration": 0.0001400420000000624, "outcome": "passed"}, "teardown": {"duration": 0.00012487500000002427, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "lineno": 134, "outcome": "passed", "keywords": ["test_batch_result_extraction", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017466599999993448, "outcome": "passed"}, "call": {"duration": 0.00012708300000008332, "outcome": "passed"}, "teardown": {"duration": 8.354099999996478e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "lineno": 155, "outcome": "passed", "keywords": ["test_partial_batch_failure_handling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001375410000000743, "outcome": "passed"}, "call": {"duration": 0.00013845800000000796, "outcome": "passed"}, "teardown": {"duration": 9.049999999999336e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "lineno": 179, "outcome": "passed", "keywords": ["test_batch_cost_calculation", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017579199999995243, "outcome": "passed"}, "call": {"duration": 0.00012883399999996659, "outcome": "passed"}, "teardown": {"duration": 8.425000000000793e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "lineno": 190, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost_savings", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001331669999999896, "outcome": "passed"}, "call": {"duration": 0.0001143749999999999, "outcome": "passed"}, "teardown": {"duration": 7.629200000003333e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "lineno": 209, "outcome": "passed", "keywords": ["test_monthly_cost_projection", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001751249999999427, "outcome": "passed"}, "call": {"duration": 0.00018341600000004732, "outcome": "passed"}, "teardown": {"duration": 8.166700000000748e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "lineno": 229, "outcome": "passed", "keywords": ["test_complete_batch_workflow", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017017500000000574, "outcome": "passed"}, "call": {"duration": 0.0001522499999999649, "outcome": "passed"}, "teardown": {"duration": 8.829100000007362e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "lineno": 268, "outcome": "passed", "keywords": ["test_batch_retry_on_failure", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014083300000000687, "outcome": "passed"}, "call": {"duration": 0.00011383300000000762, "outcome": "passed"}, "teardown": {"duration": 8.058300000002294e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "lineno": 294, "outcome": "passed", "keywords": ["test_batch_processing_latency", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013566700000000598, "outcome": "passed"}, "call": {"duration": 0.00011704099999998441, "outcome": "passed"}, "teardown": {"duration": 7.620800000007755e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "lineno": 307, "outcome": "passed", "keywords": ["test_batch_throughput", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001387499999999653, "outcome": "passed"}, "call": {"duration": 0.00011962499999995657, "outcome": "passed"}, "teardown": {"duration": 8.224999999995042e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "lineno": 21, "outcome": "passed", "keywords": ["test_verified_to_breaking_transition", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017932500000000795, "outcome": "passed"}, "call": {"duration": 0.00013991700000004492, "outcome": "passed"}, "teardown": {"duration": 9.258400000000666e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "lineno": 50, "outcome": "passed", "keywords": ["test_monitoring_to_breaking_skip_developing", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016794579999999115, "outcome": "passed"}, "call": {"duration": 0.00012304199999990661, "outcome": "passed"}, "teardown": {"duration": 8.141699999997254e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "lineno": 72, "outcome": "passed", "keywords": ["test_breaking_news_not_triggered_for_slow_stories", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0021731670000000314, "outcome": "passed"}, "call": {"duration": 0.00013179199999990843, "outcome": "passed"}, "teardown": {"duration": 8.645799999995596e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "lineno": 98, "outcome": "passed", "keywords": ["test_notification_triggered_on_breaking_status", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002008165999999978, "outcome": "passed"}, "call": {"duration": 0.00013929099999998584, "outcome": "passed"}, "teardown": {"duration": 9.500000000006725e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "lineno": 118, "outcome": "passed", "keywords": ["test_notification_payload_structure", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017158299999997517, "outcome": "passed"}, "call": {"duration": 0.00011779099999997822, "outcome": "passed"}, "teardown": {"duration": 8.27079999999869e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "lineno": 142, "outcome": "passed", "keywords": ["test_notification_deduplication", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016822080000000739, "outcome": "passed"}, "call": {"duration": 0.00012108300000002181, "outcome": "passed"}, "teardown": {"duration": 8.787499999995951e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "lineno": 159, "outcome": "passed", "keywords": ["test_notification_rate_limiting", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013870900000001463, "outcome": "passed"}, "call": {"duration": 0.0001156250000000636, "outcome": "passed"}, "teardown": {"duration": 7.945899999994843e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "lineno": 182, "outcome": "passed", "keywords": ["test_breaking_to_verified_demotion", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016960839999999866, "outcome": "passed"}, "call": {"duration": 0.00012604199999999288, "outcome": "passed"}, "teardown": {"duration": 8.912500000002321e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "lineno": 201, "outcome": "passed", "keywords": ["test_verified_to_archived_lifecycle", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001695250000000037, "outcome": "passed"}, "call": {"duration": 0.00016725000000006318, "outcome": "passed"}, "teardown": {"duration": 9.545799999999272e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "lineno": 221, "outcome": "passed", "keywords": ["test_complete_story_lifecycle_flow", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002343165999999952, "outcome": "passed"}, "call": {"duration": 0.00013625000000005993, "outcome": "passed"}, "teardown": {"duration": 9.037499999997589e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "lineno": 267, "outcome": "passed", "keywords": ["test_twitter_trending_check", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014725000000004318, "outcome": "passed"}, "call": {"duration": 0.00011687500000001627, "outcome": "passed"}, "teardown": {"duration": 7.820800000002404e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "lineno": 287, "outcome": "passed", "keywords": ["test_twitter_volume_threshold", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013924999999992416, "outcome": "passed"}, "call": {"duration": 0.00011308399999998553, "outcome": "passed"}, "teardown": {"duration": 8.091700000001367e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "lineno": 306, "outcome": "passed", "keywords": ["test_breaking_news_detection_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016367080000000422, "outcome": "passed"}, "call": {"duration": 0.0001327079999999814, "outcome": "passed"}, "teardown": {"duration": 8.379199999997144e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "lineno": 333, "outcome": "passed", "keywords": ["test_notification_send_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.000140333000000048, "outcome": "passed"}, "call": {"duration": 0.00018170800000005816, "outcome": "passed"}, "teardown": {"duration": 8.03750000000214e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "lineno": 21, "outcome": "passed", "keywords": ["test_verified_story_triggers_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017222080000000028, "outcome": "passed"}, "call": {"duration": 0.00013820799999997302, "outcome": "passed"}, "teardown": {"duration": 9.383300000009864e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "lineno": 37, "outcome": "passed", "keywords": ["test_developing_story_no_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017385830000000713, "outcome": "passed"}, "call": {"duration": 0.00012337500000003665, "outcome": "passed"}, "teardown": {"duration": 8.900000000000574e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "lineno": 55, "outcome": "passed", "keywords": ["test_summary_prompt_construction", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016012500000006646, "outcome": "passed"}, "call": {"duration": 0.00011691700000004968, "outcome": "passed"}, "teardown": {"duration": 7.954200000004352e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "lineno": 83, "outcome": "passed", "keywords": ["test_summary_stored_in_cluster", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0021743329999999172, "outcome": "passed"}, "call": {"duration": 0.00012191699999997141, "outcome": "passed"}, "teardown": {"duration": 8.525000000003669e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "lineno": 99, "outcome": "passed", "keywords": ["test_headline_regeneration_on_source_addition", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00169583299999998, "outcome": "passed"}, "call": {"duration": 0.00012054200000000126, "outcome": "passed"}, "teardown": {"duration": 8.233300000004551e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "lineno": 122, "outcome": "passed", "keywords": ["test_cost_tracking_for_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015166699999991096, "outcome": "passed"}, "call": {"duration": 0.00011379100000008524, "outcome": "passed"}, "teardown": {"duration": 8.033399999995972e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "lineno": 146, "outcome": "passed", "keywords": ["test_real_time_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0019312910000000016, "outcome": "passed"}, "call": {"duration": 0.00014720800000000978, "outcome": "passed"}, "teardown": {"duration": 9.987499999997151e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "lineno": 163, "outcome": "passed", "keywords": ["test_batch_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001785625000000013, "outcome": "passed"}, "call": {"duration": 0.00012820899999999025, "outcome": "passed"}, "teardown": {"duration": 8.929199999996307e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "lineno": 178, "outcome": "passed", "keywords": ["test_batch_result_processing", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001895832999999958, "outcome": "passed"}, "call": {"duration": 0.000148000000000037, "outcome": "passed"}, "teardown": {"duration": 0.00011070899999998662, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "lineno": 194, "outcome": "passed", "keywords": ["test_summary_fallback_on_ai_refusal", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002258583000000036, "outcome": "passed"}, "call": {"duration": 0.00012595900000000881, "outcome": "passed"}, "teardown": {"duration": 9.46659999999655e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "lineno": 219, "outcome": "passed", "keywords": ["test_summary_length_validation", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015920800000002178, "outcome": "passed"}, "call": {"duration": 0.0001340000000000785, "outcome": "passed"}, "teardown": {"duration": 8.450000000004287e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "lineno": 231, "outcome": "passed", "keywords": ["test_summary_includes_key_information", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016408300000003706, "outcome": "passed"}, "call": {"duration": 0.00011424999999998242, "outcome": "passed"}, "teardown": {"duration": 8.283300000000438e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "lineno": 248, "outcome": "passed", "keywords": ["test_summary_prompt_cache_usage", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013195900000007033, "outcome": "passed"}, "call": {"duration": 0.00010920800000002728, "outcome": "passed"}, "teardown": {"duration": 7.808299999989554e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "lineno": 267, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.000132000000000021, "outcome": "passed"}, "call": {"duration": 0.00010979200000005296, "outcome": "passed"}, "teardown": {"duration": 7.820800000002404e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "lineno": 284, "outcome": "passed", "keywords": ["test_summarization_rate_limit", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013295800000001634, "outcome": "passed"}, "call": {"duration": 0.00010879099999994146, "outcome": "passed"}, "teardown": {"duration": 8.125000000003268e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "lineno": 27, "outcome": "passed", "keywords": ["test_new_article_creates_new_cluster", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016825000000000312, "outcome": "passed"}, "call": {"duration": 0.00031204200000001237, "outcome": "passed"}, "teardown": {"duration": 8.724999999998317e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "lineno": 95, "outcome": "passed", "keywords": ["test_similar_article_clusters_with_existing", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016152089999998953, "outcome": "passed"}, "call": {"duration": 0.00030529200000006806, "outcome": "passed"}, "teardown": {"duration": 8.370800000001566e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "lineno": 134, "outcome": "passed", "keywords": ["test_duplicate_source_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016716249999999544, "outcome": "passed"}, "call": {"duration": 0.0001481659999998941, "outcome": "passed"}, "teardown": {"duration": 8.870899999990911e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "lineno": 167, "outcome": "passed", "keywords": ["test_cross_category_clustering_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0022620420000000196, "outcome": "passed"}, "call": {"duration": 0.001134917000000013, "outcome": "passed"}, "teardown": {"duration": 8.445800000000947e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "lineno": 189, "outcome": "passed", "keywords": ["test_entity_based_matching", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001719666000000064, "outcome": "passed"}, "call": {"duration": 0.0001738329999999566, "outcome": "passed"}, "teardown": {"duration": 0.00010587500000003303, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "lineno": 221, "outcome": "passed", "keywords": ["test_full_rss_to_cluster_pipeline", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016664999999999042, "outcome": "passed"}, "call": {"duration": 0.0015947080000000557, "outcome": "passed"}, "teardown": {"duration": 9.283399999993058e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "lineno": 260, "outcome": "passed", "keywords": ["test_multiple_articles_same_story", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016387919999999445, "outcome": "passed"}, "call": {"duration": 0.00025245799999995544, "outcome": "passed"}, "teardown": {"duration": 8.333299999996324e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "lineno": 291, "outcome": "passed", "keywords": ["test_story_status_progression", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016702499999999842, "outcome": "passed"}, "call": {"duration": 0.00011874999999994529, "outcome": "passed"}, "teardown": {"duration": 8.545800000003823e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "lineno": 321, "outcome": "passed", "keywords": ["test_invalid_feed_handling", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014012500000004646, "outcome": "passed"}, "call": {"duration": 0.0004242919999999373, "outcome": "passed"}, "teardown": {"duration": 8.14579999999232e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "lineno": 334, "outcome": "passed", "keywords": ["test_missing_required_fields", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013974999999999405, "outcome": "passed"}, "call": {"duration": 0.00011387499999993, "outcome": "passed"}, "teardown": {"duration": 0.00011141699999994703, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "lineno": 350, "outcome": "passed", "keywords": ["test_html_cleaning_in_pipeline", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001591250000000377, "outcome": "passed"}, "call": {"duration": 0.00027008300000008756, "outcome": "passed"}, "teardown": {"duration": 9.033299999994249e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "lineno": 372, "outcome": "passed", "keywords": ["test_clustering_100_articles", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0022895829999999284, "outcome": "passed"}, "call": {"duration": 0.0011362089999999991, "outcome": "passed"}, "teardown": {"duration": 9.808300000002657e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "lineno": 401, "outcome": "passed", "keywords": ["test_fuzzy_matching_performance", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015054199999997575, "outcome": "passed"}, "call": {"duration": 0.04442062499999999, "outcome": "passed"}, "teardown": {"duration": 0.00013125000000002718, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "lineno": 32, "outcome": "passed", "keywords": ["test_api_is_reachable", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019279100000002547, "outcome": "passed"}, "call": {"duration": 0.23304904199999998, "outcome": "passed"}, "teardown": {"duration": 0.00012083299999998687, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "lineno": 40, "outcome": "failed", "keywords": ["test_stories_endpoint_returns_data", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019620899999994723, "outcome": "passed"}, "call": {"duration": 0.22721991699999988, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 45, "message": "AssertionError: Endpoint returned 403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 45, "message": "in test_stories_endpoint_returns_data"}], "longrepr": "system/test_deployed_api.py:45: in test_stories_endpoint_returns_data\n    assert response.status_code == 200, f\"Endpoint returned {response.status_code}\"\nE   AssertionError: Endpoint returned 403\nE   assert 403 == 200\nE    +  where 403 = <Response [403]>.status_code"}, "teardown": {"duration": 0.00017337499999992012, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "lineno": 60, "outcome": "failed", "keywords": ["test_stories_are_recent", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0002090409999999654, "outcome": "passed"}, "call": {"duration": 0.18857800000000013, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 67, "message": "AssertionError: No stories to check\nassert 0 > 0\n +  where 0 = len([])"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 67, "message": "in test_stories_are_recent"}], "longrepr": "system/test_deployed_api.py:67: in test_stories_are_recent\n    assert len(stories) > 0, \"No stories to check\"\nE   AssertionError: No stories to check\nE   assert 0 > 0\nE    +  where 0 = len([])"}, "teardown": {"duration": 0.00014862500000001333, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "lineno": 99, "outcome": "skipped", "keywords": ["test_articles_are_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019750000000007262, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 100, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 9.133300000008227e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "lineno": 128, "outcome": "skipped", "keywords": ["test_rss_ingestion_rate", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00016124999999989065, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 129, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.170799999995815e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "lineno": 156, "outcome": "skipped", "keywords": ["test_multiple_sources_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00014804199999995937, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 157, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.0006827080000000318, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "lineno": 199, "outcome": "skipped", "keywords": ["test_stories_are_being_created", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00014787500000013054, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 200, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.945899999994843e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "lineno": 224, "outcome": "skipped", "keywords": ["test_stories_have_multiple_sources", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001421659999998326, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 225, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.966599999997825e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "lineno": 271, "outcome": "skipped", "keywords": ["test_summaries_are_being_generated", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001415000000000166, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 272, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.708300000008883e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "lineno": 297, "outcome": "skipped", "keywords": ["test_summary_coverage_rate", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0002062910000000251, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 298, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 7.945899999994843e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "lineno": 346, "outcome": "passed", "keywords": ["test_function_app_is_deployed", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00012191699999997141, "outcome": "passed"}, "call": {"duration": 4.161187042, "outcome": "passed", "stdout": "\u2713 Function App is deployed and reachable\n"}, "teardown": {"duration": 0.00013833299999976845, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "lineno": 360, "outcome": "skipped", "keywords": ["test_rss_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00016950000000015564, "outcome": "passed"}, "call": {"duration": 8.62499999998434e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 365, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 9.075000000002831e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "lineno": 366, "outcome": "skipped", "keywords": ["test_clustering_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00013091600000070258, "outcome": "passed"}, "call": {"duration": 7.391600000072884e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 369, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 7.925000000064131e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "lineno": 17, "outcome": "passed", "keywords": ["test_identical_titles_high_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013029099999961602, "outcome": "passed"}, "call": {"duration": 8.241600000058469e-05, "outcome": "passed"}, "teardown": {"duration": 8.204099999975512e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "lineno": 23, "outcome": "passed", "keywords": ["test_very_similar_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012466599999960692, "outcome": "passed"}, "call": {"duration": 7.395799999976305e-05, "outcome": "passed"}, "teardown": {"duration": 7.458400000004417e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "lineno": 30, "outcome": "passed", "keywords": ["test_related_but_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001231250000000017, "outcome": "passed"}, "call": {"duration": 7.437499999962682e-05, "outcome": "passed"}, "teardown": {"duration": 7.516700000032017e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "lineno": 37, "outcome": "passed", "keywords": ["test_unrelated_titles_low_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012791600000028325, "outcome": "passed"}, "call": {"duration": 7.416699999929222e-05, "outcome": "passed"}, "teardown": {"duration": 7.312500000011823e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "lineno": 44, "outcome": "passed", "keywords": ["test_completely_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012220900000059487, "outcome": "passed"}, "call": {"duration": 7.433299999970444e-05, "outcome": "passed"}, "teardown": {"duration": 0.00011445900000062181, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "lineno": 51, "outcome": "passed", "keywords": ["test_similarity_with_word_order_change", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0003199590000004804, "outcome": "passed"}, "call": {"duration": 0.0001191249999994426, "outcome": "passed"}, "teardown": {"duration": 0.00011458300000022348, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "lineno": 58, "outcome": "passed", "keywords": ["test_similarity_case_insensitive", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00016716699999985707, "outcome": "passed"}, "call": {"duration": 8.416600000060726e-05, "outcome": "passed"}, "teardown": {"duration": 0.00018091699999978061, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "lineno": 65, "outcome": "passed", "keywords": ["test_similarity_with_extra_words", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00016654100000046412, "outcome": "passed"}, "call": {"duration": 9.108300000004732e-05, "outcome": "passed"}, "teardown": {"duration": 8.391699999954483e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "lineno": 78, "outcome": "passed", "keywords": ["test_crime_vs_health_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013491699999956808, "outcome": "passed"}, "call": {"duration": 0.00018012499999997544, "outcome": "passed"}, "teardown": {"duration": 8.199999999991547e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "lineno": 84, "outcome": "passed", "keywords": ["test_politics_vs_sports_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012658299999923628, "outcome": "passed"}, "call": {"duration": 7.662500000016337e-05, "outcome": "passed"}, "teardown": {"duration": 7.820799999969097e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "lineno": 90, "outcome": "passed", "keywords": ["test_business_vs_weather_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013654199999990624, "outcome": "passed"}, "call": {"duration": 7.637499999990638e-05, "outcome": "passed"}, "teardown": {"duration": 8.054200000007228e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "lineno": 96, "outcome": "passed", "keywords": ["test_same_topic_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012050000000041194, "outcome": "passed"}, "call": {"duration": 7.604199999988737e-05, "outcome": "passed"}, "teardown": {"duration": 7.437499999962682e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "lineno": 102, "outcome": "passed", "keywords": ["test_no_topic_keywords_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011825000000076358, "outcome": "passed"}, "call": {"duration": 8.12080000001103e-05, "outcome": "passed"}, "teardown": {"duration": 7.404199999960781e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "lineno": 108, "outcome": "passed", "keywords": ["test_one_topic_vs_none_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012745800000057983, "outcome": "passed"}, "call": {"duration": 8.029200000070347e-05, "outcome": "passed"}, "teardown": {"duration": 7.650000000047896e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "lineno": 114, "outcome": "passed", "keywords": ["test_medical_vs_political_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00022383299999972905, "outcome": "passed"}, "call": {"duration": 0.00011545899999987341, "outcome": "passed"}, "teardown": {"duration": 9.891699999986514e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "lineno": 125, "outcome": "passed", "keywords": ["test_threshold_75_percent", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00015250000000044395, "outcome": "passed"}, "call": {"duration": 9.683299999974082e-05, "outcome": "passed"}, "teardown": {"duration": 8.554100000068843e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "lineno": 145, "outcome": "passed", "keywords": ["test_edge_cases_near_threshold", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012625000000010544, "outcome": "passed"}, "call": {"duration": 0.00012141699999990152, "outcome": "passed"}, "teardown": {"duration": 8.029199999981529e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "lineno": 160, "outcome": "passed", "keywords": ["test_exact_match_via_fingerprint", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012808299999989003, "outcome": "passed"}, "call": {"duration": 9.22079999998715e-05, "outcome": "passed"}, "teardown": {"duration": 7.737500000004616e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "lineno": 175, "outcome": "passed", "keywords": ["test_fuzzy_match_required_for_variations", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012524999999996567, "outcome": "passed"}, "call": {"duration": 7.887499999981173e-05, "outcome": "passed"}, "teardown": {"duration": 7.441600000035464e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "lineno": 184, "outcome": "passed", "keywords": ["test_no_match_for_different_events", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012029199999918916, "outcome": "passed"}, "call": {"duration": 8.63330000004936e-05, "outcome": "passed"}, "teardown": {"duration": 7.500000000071338e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "lineno": 199, "outcome": "passed", "keywords": ["test_extract_source_from_article_id", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00011941699999962196, "outcome": "passed"}, "call": {"duration": 6.454199999961219e-05, "outcome": "passed"}, "teardown": {"duration": 7.562500000002359e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "lineno": 205, "outcome": "passed", "keywords": ["test_identify_duplicate_sources_in_cluster", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012320899999984647, "outcome": "passed"}, "call": {"duration": 8.083300000016891e-05, "outcome": "passed"}, "teardown": {"duration": 7.354199999998201e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "lineno": 224, "outcome": "passed", "keywords": ["test_unique_sources_only", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012041700000064992, "outcome": "passed"}, "call": {"duration": 6.366700000004499e-05, "outcome": "passed"}, "teardown": {"duration": 7.42919999998648e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "lineno": 242, "outcome": "passed", "keywords": ["test_similarity_calculation_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001231250000000017, "outcome": "passed"}, "call": {"duration": 0.0008562500000000028, "outcome": "passed"}, "teardown": {"duration": 9.620900000051336e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "lineno": 257, "outcome": "passed", "keywords": ["test_topic_conflict_check_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00014279200000011372, "outcome": "passed"}, "call": {"duration": 0.0066614579999999535, "outcome": "passed"}, "teardown": {"duration": 0.0001177500000002496, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "lineno": 22, "outcome": "passed", "keywords": ["test_clean_simple_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00015783300000027367, "outcome": "passed"}, "call": {"duration": 8.449999999982083e-05, "outcome": "passed"}, "teardown": {"duration": 8.750000000024016e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "lineno": 28, "outcome": "passed", "keywords": ["test_clean_nested_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.000127416999999852, "outcome": "passed"}, "call": {"duration": 7.10829999999163e-05, "outcome": "passed"}, "teardown": {"duration": 7.604199999988737e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "lineno": 34, "outcome": "passed", "keywords": ["test_clean_html_entities", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012379100000003973, "outcome": "passed"}, "call": {"duration": 8.095899999993605e-05, "outcome": "passed"}, "teardown": {"duration": 7.358299999982165e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "lineno": 41, "outcome": "passed", "keywords": ["test_clean_with_newlines", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011758299999975463, "outcome": "passed"}, "call": {"duration": 6.970799999983512e-05, "outcome": "passed"}, "teardown": {"duration": 7.279199999921104e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "lineno": 48, "outcome": "passed", "keywords": ["test_clean_empty_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011562500000028564, "outcome": "passed"}, "call": {"duration": 6.562500000040217e-05, "outcome": "passed"}, "teardown": {"duration": 7.100000000015427e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "lineno": 59, "outcome": "passed", "keywords": ["test_extract_location_entities", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011700000000036681, "outcome": "passed"}, "call": {"duration": 9.183400000001285e-05, "outcome": "passed"}, "teardown": {"duration": 7.029200000019387e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "lineno": 71, "outcome": "passed", "keywords": ["test_extract_from_empty_text", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011754099999983225, "outcome": "passed"}, "call": {"duration": 6.279100000039506e-05, "outcome": "passed"}, "teardown": {"duration": 6.920800000020932e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "lineno": 76, "outcome": "passed", "keywords": ["test_extract_with_special_characters", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011399999999994748, "outcome": "passed"}, "call": {"duration": 7.462499999988381e-05, "outcome": "passed"}, "teardown": {"duration": 7.46669999998062e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "lineno": 87, "outcome": "passed", "keywords": ["test_categorize_tech_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012366700000043807, "outcome": "passed"}, "call": {"duration": 9.420800000015106e-05, "outcome": "passed"}, "teardown": {"duration": 7.59580000000426e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "lineno": 94, "outcome": "passed", "keywords": ["test_categorize_business_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011587500000054263, "outcome": "passed"}, "call": {"duration": 8.699999999972619e-05, "outcome": "passed"}, "teardown": {"duration": 6.908399999971948e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "lineno": 101, "outcome": "passed", "keywords": ["test_categorize_health_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00016508300000062093, "outcome": "passed"}, "call": {"duration": 8.812500000043855e-05, "outcome": "passed"}, "teardown": {"duration": 6.933299999989373e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "lineno": 108, "outcome": "passed", "keywords": ["test_categorize_sports_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001144579999996509, "outcome": "passed"}, "call": {"duration": 8.387500000051062e-05, "outcome": "passed"}, "teardown": {"duration": 7.324999999980264e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "lineno": 115, "outcome": "passed", "keywords": ["test_categorize_fallback_to_general", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011758299999975463, "outcome": "passed"}, "call": {"duration": 8.658299999986241e-05, "outcome": "passed"}, "teardown": {"duration": 7.087500000046987e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "lineno": 127, "outcome": "passed", "keywords": ["test_detect_product_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011529200000026663, "outcome": "passed"}, "call": {"duration": 0.0003620829999997355, "outcome": "passed"}, "teardown": {"duration": 7.64579999996684e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "lineno": 134, "outcome": "passed", "keywords": ["test_detect_sponsored_content", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011904099999959783, "outcome": "passed"}, "call": {"duration": 0.0001865419999997897, "outcome": "passed"}, "teardown": {"duration": 0.00011162499999972653, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "lineno": 141, "outcome": "passed", "keywords": ["test_legitimate_article_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001514580000003818, "outcome": "passed"}, "call": {"duration": 0.0007580420000001808, "outcome": "passed"}, "teardown": {"duration": 8.537499999938802e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "lineno": 148, "outcome": "passed", "keywords": ["test_news_about_products_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013520800000055289, "outcome": "passed"}, "call": {"duration": 0.00016008299999992204, "outcome": "passed"}, "teardown": {"duration": 0.00010758300000013321, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "lineno": 162, "outcome": "passed", "keywords": ["test_truncate_long_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014712499999980366, "outcome": "passed"}, "call": {"duration": 0.00014758300000039526, "outcome": "passed"}, "teardown": {"duration": 7.962499999969452e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "lineno": 168, "outcome": "passed", "keywords": ["test_truncate_short_text_unchanged", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012524999999996567, "outcome": "passed"}, "call": {"duration": 6.958400000023346e-05, "outcome": "passed"}, "teardown": {"duration": 7.445900000035977e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "lineno": 174, "outcome": "passed", "keywords": ["test_truncate_at_word_boundary", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001215420000004741, "outcome": "passed"}, "call": {"duration": 6.708299999935718e-05, "outcome": "passed"}, "teardown": {"duration": 7.254199999984223e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "lineno": 181, "outcome": "passed", "keywords": ["test_truncate_empty_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011945899999954435, "outcome": "passed"}, "call": {"duration": 7.12910000002509e-05, "outcome": "passed"}, "teardown": {"duration": 7.816699999985133e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "lineno": 191, "outcome": "passed", "keywords": ["test_generate_article_id", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012229199999946871, "outcome": "passed"}, "call": {"duration": 9.970799999958757e-05, "outcome": "passed"}, "teardown": {"duration": 7.283299999993886e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "lineno": 206, "outcome": "passed", "keywords": ["test_generate_different_ids_for_different_urls", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012029200000007734, "outcome": "passed"}, "call": {"duration": 7.237500000023545e-05, "outcome": "passed"}, "teardown": {"duration": 7.374999999942844e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "lineno": 222, "outcome": "passed", "keywords": ["test_generate_story_fingerprint", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011779100000008924, "outcome": "passed"}, "call": {"duration": 7.758300000038076e-05, "outcome": "passed"}, "teardown": {"duration": 7.34170000002976e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "lineno": 237, "outcome": "passed", "keywords": ["test_fingerprint_consistency", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011566600000012528, "outcome": "passed"}, "call": {"duration": 7.204100000013369e-05, "outcome": "passed"}, "teardown": {"duration": 7.241700000015783e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "lineno": 246, "outcome": "passed", "keywords": ["test_fingerprint_different_for_different_titles", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001172500000006238, "outcome": "passed"}, "call": {"duration": 7.387500000000102e-05, "outcome": "passed"}, "teardown": {"duration": 8.53750000002762e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "lineno": 256, "outcome": "passed", "keywords": ["test_fingerprint_normalizes_case", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012462500000065546, "outcome": "passed"}, "call": {"duration": 7.275000000017684e-05, "outcome": "passed"}, "teardown": {"duration": 7.245799999999747e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "lineno": 271, "outcome": "passed", "keywords": ["test_parse_rfc822_date", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011904100000048601, "outcome": "passed"}, "call": {"duration": 8.024999999989291e-05, "outcome": "passed"}, "teardown": {"duration": 7.479100000029604e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "lineno": 284, "outcome": "passed", "keywords": ["test_parse_missing_date_returns_now", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011841600000028762, "outcome": "passed"}, "call": {"duration": 8.708400000045913e-05, "outcome": "passed"}, "teardown": {"duration": 0.0004361660000000711, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}]}