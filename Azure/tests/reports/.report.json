{"created": 1761449373.471024, "duration": 2.642606019973755, "exitcode": 1, "root": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests", "environment": {}, "summary": {"passed": 108, "failed": 6, "skipped": 9, "total": 123, "collected": 123}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "integration/__init__.py", "type": "Package"}, {"nodeid": "system/test_deployed_api.py", "type": "Module"}, {"nodeid": "unit/test_clustering_logic.py", "type": "Module"}, {"nodeid": "unit/test_rss_parsing.py", "type": "Module"}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "type": "Function", "lineno": 49}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "type": "Function", "lineno": 71}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "type": "Function", "lineno": 104}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "type": "Function", "lineno": 119}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "type": "Function", "lineno": 155}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "type": "Function", "lineno": 179}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "type": "Function", "lineno": 190}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "type": "Function", "lineno": 209}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "type": "Function", "lineno": 229}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "type": "Function", "lineno": 268}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "type": "Function", "lineno": 294}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "type": "Function", "lineno": 307}]}, {"nodeid": "integration/test_batch_processing.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "type": "Class"}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "type": "Function", "lineno": 50}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "type": "Function", "lineno": 72}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "type": "Function", "lineno": 98}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "type": "Function", "lineno": 118}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "type": "Function", "lineno": 142}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "type": "Function", "lineno": 159}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "type": "Function", "lineno": 182}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "type": "Function", "lineno": 201}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "type": "Function", "lineno": 221}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "type": "Function", "lineno": 287}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "type": "Function", "lineno": 306}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "type": "Function", "lineno": 333}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "type": "Class"}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "type": "Function", "lineno": 37}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "type": "Function", "lineno": 55}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "type": "Function", "lineno": 83}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "type": "Function", "lineno": 99}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "type": "Function", "lineno": 122}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "type": "Function", "lineno": 146}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "type": "Function", "lineno": 163}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "type": "Function", "lineno": 178}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "type": "Function", "lineno": 194}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "type": "Function", "lineno": 219}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "type": "Function", "lineno": 231}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "type": "Function", "lineno": 248}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "type": "Function", "lineno": 284}]}, {"nodeid": "integration/test_clustering_to_summarization.py", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "type": "Class"}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "type": "Function", "lineno": 27}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "type": "Function", "lineno": 95}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "type": "Function", "lineno": 167}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "type": "Function", "lineno": 189}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "type": "Function", "lineno": 221}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "type": "Function", "lineno": 260}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "type": "Function", "lineno": 291}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "type": "Function", "lineno": 321}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "type": "Function", "lineno": 334}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "type": "Function", "lineno": 350}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "type": "Function", "lineno": 372}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "type": "Function", "lineno": 401}]}, {"nodeid": "integration/test_rss_to_clustering.py", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "type": "Class"}]}, {"nodeid": "integration/__init__.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py", "type": "Module"}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "type": "Module"}, {"nodeid": "integration/test_clustering_to_summarization.py", "type": "Module"}, {"nodeid": "integration/test_rss_to_clustering.py", "type": "Module"}]}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "type": "Function", "lineno": 24}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "type": "Function", "lineno": 32}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "type": "Function", "lineno": 52}]}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "type": "Function", "lineno": 91}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "type": "Function", "lineno": 120}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "type": "Function", "lineno": 148}]}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "type": "Function", "lineno": 191}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "type": "Function", "lineno": 216}]}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "type": "Function", "lineno": 263}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "type": "Function", "lineno": 289}]}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "type": "Function", "lineno": 338}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "type": "Function", "lineno": 352}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "type": "Function", "lineno": 358}]}, {"nodeid": "system/test_deployed_api.py", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "type": "Class"}]}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "type": "Function", "lineno": 17}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "type": "Function", "lineno": 23}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "type": "Function", "lineno": 30}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "type": "Function", "lineno": 37}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "type": "Function", "lineno": 44}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "type": "Function", "lineno": 51}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "type": "Function", "lineno": 58}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "type": "Function", "lineno": 65}]}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "type": "Function", "lineno": 78}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "type": "Function", "lineno": 84}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "type": "Function", "lineno": 90}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "type": "Function", "lineno": 96}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "type": "Function", "lineno": 102}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "type": "Function", "lineno": 114}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "type": "Function", "lineno": 125}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "type": "Function", "lineno": 145}]}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "type": "Function", "lineno": 160}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "type": "Function", "lineno": 175}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "type": "Function", "lineno": 184}]}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "type": "Function", "lineno": 199}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "type": "Function", "lineno": 205}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "type": "Function", "lineno": 224}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "type": "Function", "lineno": 242}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "type": "Function", "lineno": 257}]}, {"nodeid": "unit/test_clustering_logic.py", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "type": "Class"}]}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "type": "Function", "lineno": 22}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "type": "Function", "lineno": 28}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "type": "Function", "lineno": 34}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "type": "Function", "lineno": 41}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "type": "Function", "lineno": 48}]}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "type": "Function", "lineno": 59}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "type": "Function", "lineno": 71}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "type": "Function", "lineno": 76}]}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "type": "Function", "lineno": 87}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "type": "Function", "lineno": 94}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "type": "Function", "lineno": 101}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "type": "Function", "lineno": 115}]}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "type": "Function", "lineno": 127}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "type": "Function", "lineno": 134}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "type": "Function", "lineno": 141}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "type": "Function", "lineno": 148}]}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "type": "Function", "lineno": 162}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "type": "Function", "lineno": 168}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "type": "Function", "lineno": 174}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "type": "Function", "lineno": 181}]}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "type": "Function", "lineno": 191}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "type": "Function", "lineno": 206}]}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "type": "Function", "lineno": 222}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "type": "Function", "lineno": 237}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "type": "Function", "lineno": 246}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "type": "Function", "lineno": 256}]}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "type": "Function", "lineno": 271}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "type": "Function", "lineno": 284}]}, {"nodeid": "unit/test_rss_parsing.py", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "type": "Class"}]}], "tests": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "lineno": 21, "outcome": "passed", "keywords": ["test_batch_creation_from_unsummarized_stories", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0033805829999999926, "outcome": "passed"}, "call": {"duration": 0.00030679099999997295, "outcome": "passed"}, "teardown": {"duration": 0.00012091699999999816, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "lineno": 49, "outcome": "passed", "keywords": ["test_batch_size_limits", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017974580000000295, "outcome": "passed"}, "call": {"duration": 0.0001627920000000227, "outcome": "passed"}, "teardown": {"duration": 9.445800000001947e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "lineno": 71, "outcome": "passed", "keywords": ["test_batch_request_format", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016783300000000612, "outcome": "passed"}, "call": {"duration": 0.00012200000000001099, "outcome": "passed"}, "teardown": {"duration": 9.487499999999427e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "lineno": 104, "outcome": "passed", "keywords": ["test_batch_status_polling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0020215000000000094, "outcome": "passed"}, "call": {"duration": 0.0001186659999999895, "outcome": "passed"}, "teardown": {"duration": 9.06659999999615e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "lineno": 119, "outcome": "passed", "keywords": ["test_batch_completion_detection", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016477500000000034, "outcome": "passed"}, "call": {"duration": 0.00011625000000003993, "outcome": "passed"}, "teardown": {"duration": 8.71249999999657e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "lineno": 134, "outcome": "passed", "keywords": ["test_batch_result_extraction", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017387499999999, "outcome": "passed"}, "call": {"duration": 0.00012158300000003619, "outcome": "passed"}, "teardown": {"duration": 8.366700000000948e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "lineno": 155, "outcome": "passed", "keywords": ["test_partial_batch_failure_handling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001371669999999936, "outcome": "passed"}, "call": {"duration": 0.00011425000000003793, "outcome": "passed"}, "teardown": {"duration": 7.825000000000193e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "lineno": 179, "outcome": "failed", "keywords": ["test_batch_cost_calculation", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001539580000000096, "outcome": "passed"}, "call": {"duration": 0.00024570900000003837, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 189, "message": "assert 0.0015 == 0.015"}, "traceback": [{"path": "integration/test_batch_processing.py", "lineno": 189, "message": "in test_batch_cost_calculation"}], "longrepr": "integration/test_batch_processing.py:189: in test_batch_cost_calculation\n    assert batch['total_cost'] == 0.015  # As specified in fixture\nE   assert 0.0015 == 0.015"}, "teardown": {"duration": 0.0001652089999999995, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "lineno": 190, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost_savings", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017575000000003005, "outcome": "passed"}, "call": {"duration": 0.00014379100000000422, "outcome": "passed"}, "teardown": {"duration": 8.408399999998428e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "lineno": 209, "outcome": "passed", "keywords": ["test_monthly_cost_projection", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001363750000000219, "outcome": "passed"}, "call": {"duration": 0.00011495900000002557, "outcome": "passed"}, "teardown": {"duration": 8.283300000000438e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "lineno": 229, "outcome": "passed", "keywords": ["test_complete_batch_workflow", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017923750000000127, "outcome": "passed"}, "call": {"duration": 0.00015170799999997264, "outcome": "passed"}, "teardown": {"duration": 8.487499999998427e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "lineno": 268, "outcome": "passed", "keywords": ["test_batch_retry_on_failure", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013574999999999005, "outcome": "passed"}, "call": {"duration": 0.00011345900000003795, "outcome": "passed"}, "teardown": {"duration": 7.612499999998246e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "lineno": 294, "outcome": "passed", "keywords": ["test_batch_processing_latency", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013099999999999223, "outcome": "passed"}, "call": {"duration": 0.00011370799999999015, "outcome": "passed"}, "teardown": {"duration": 7.658399999999066e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "lineno": 307, "outcome": "passed", "keywords": ["test_batch_throughput", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00012966599999997275, "outcome": "passed"}, "call": {"duration": 0.00010937499999996714, "outcome": "passed"}, "teardown": {"duration": 7.499999999999174e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "lineno": 21, "outcome": "failed", "keywords": ["test_verified_to_breaking_transition", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016632080000000271, "outcome": "passed"}, "call": {"duration": 0.0001264170000000453, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 41, "message": "KeyError: 'first_seen'"}, "traceback": [{"path": "integration/test_breaking_news_lifecycle.py", "lineno": 41, "message": "in test_verified_to_breaking_transition"}], "longrepr": "integration/test_breaking_news_lifecycle.py:41: in test_verified_to_breaking_transition\n    first_seen = datetime.fromisoformat(story['first_seen'].replace('Z', '+00:00'))\nE   KeyError: 'first_seen'"}, "teardown": {"duration": 0.00016529199999998356, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "lineno": 50, "outcome": "passed", "keywords": ["test_monitoring_to_breaking_skip_developing", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017549170000000225, "outcome": "passed"}, "call": {"duration": 0.00014629199999999232, "outcome": "passed"}, "teardown": {"duration": 8.625000000000993e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "lineno": 72, "outcome": "passed", "keywords": ["test_breaking_news_not_triggered_for_slow_stories", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00168566600000003, "outcome": "passed"}, "call": {"duration": 0.0001347080000000389, "outcome": "passed"}, "teardown": {"duration": 8.500000000000174e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "lineno": 98, "outcome": "passed", "keywords": ["test_notification_triggered_on_breaking_status", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016520839999999981, "outcome": "passed"}, "call": {"duration": 0.00018033299999997698, "outcome": "passed"}, "teardown": {"duration": 0.00010904199999994812, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "lineno": 118, "outcome": "passed", "keywords": ["test_notification_payload_structure", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001822079999999615, "outcome": "passed"}, "call": {"duration": 0.00012200000000001099, "outcome": "passed"}, "teardown": {"duration": 8.737500000000065e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "lineno": 142, "outcome": "passed", "keywords": ["test_notification_deduplication", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002237916999999978, "outcome": "passed"}, "call": {"duration": 0.00012212500000002846, "outcome": "passed"}, "teardown": {"duration": 8.67920000000022e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "lineno": 159, "outcome": "passed", "keywords": ["test_notification_rate_limiting", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001451670000000016, "outcome": "passed"}, "call": {"duration": 0.00011370800000004566, "outcome": "passed"}, "teardown": {"duration": 7.762499999997008e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "lineno": 182, "outcome": "failed", "keywords": ["test_breaking_to_verified_demotion", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016315419999999858, "outcome": "passed"}, "call": {"duration": 0.00012645799999999596, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 189, "message": "KeyError: 'breaking_triggered_at'"}, "traceback": [{"path": "integration/test_breaking_news_lifecycle.py", "lineno": 189, "message": "in test_breaking_to_verified_demotion"}], "longrepr": "integration/test_breaking_news_lifecycle.py:189: in test_breaking_to_verified_demotion\n    story['breaking_triggered_at'].replace('Z', '+00:00')\nE   KeyError: 'breaking_triggered_at'"}, "teardown": {"duration": 9.824999999996642e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "lineno": 201, "outcome": "passed", "keywords": ["test_verified_to_archived_lifecycle", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001641249999999983, "outcome": "passed"}, "call": {"duration": 0.00014091699999996266, "outcome": "passed"}, "teardown": {"duration": 8.495899999999557e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "lineno": 221, "outcome": "passed", "keywords": ["test_complete_story_lifecycle_flow", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016778330000000174, "outcome": "passed"}, "call": {"duration": 0.00012383399999998934, "outcome": "passed"}, "teardown": {"duration": 8.87079999999929e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "lineno": 267, "outcome": "passed", "keywords": ["test_twitter_trending_check", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001467920000000067, "outcome": "passed"}, "call": {"duration": 0.0001134579999999552, "outcome": "passed"}, "teardown": {"duration": 8.016699999996435e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "lineno": 287, "outcome": "passed", "keywords": ["test_twitter_volume_threshold", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013966700000000998, "outcome": "passed"}, "call": {"duration": 0.00010929199999998307, "outcome": "passed"}, "teardown": {"duration": 8.220800000002804e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "lineno": 306, "outcome": "passed", "keywords": ["test_breaking_news_detection_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0020966669999999965, "outcome": "passed"}, "call": {"duration": 0.0001283329999999805, "outcome": "passed"}, "teardown": {"duration": 9.150000000002212e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "lineno": 333, "outcome": "passed", "keywords": ["test_notification_send_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001530829999999983, "outcome": "passed"}, "call": {"duration": 0.00010870900000004013, "outcome": "passed"}, "teardown": {"duration": 8.133400000004398e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "lineno": 21, "outcome": "passed", "keywords": ["test_verified_story_triggers_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00167162500000001, "outcome": "passed"}, "call": {"duration": 0.0001230409999999904, "outcome": "passed"}, "teardown": {"duration": 9.379199999998145e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "lineno": 37, "outcome": "passed", "keywords": ["test_developing_story_no_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016706250000000367, "outcome": "passed"}, "call": {"duration": 0.0001290409999999964, "outcome": "passed"}, "teardown": {"duration": 0.00010220900000001976, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "lineno": 55, "outcome": "passed", "keywords": ["test_summary_prompt_construction", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016341699999999904, "outcome": "passed"}, "call": {"duration": 0.00011508300000001581, "outcome": "passed"}, "teardown": {"duration": 7.570800000000766e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "lineno": 83, "outcome": "passed", "keywords": ["test_summary_stored_in_cluster", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001745166999999992, "outcome": "passed"}, "call": {"duration": 0.00013229199999997832, "outcome": "passed"}, "teardown": {"duration": 9.012499999999646e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "lineno": 99, "outcome": "passed", "keywords": ["test_headline_regeneration_on_source_addition", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00237225000000002, "outcome": "passed"}, "call": {"duration": 0.00036395799999999756, "outcome": "passed"}, "teardown": {"duration": 0.00014074999999991178, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "lineno": 122, "outcome": "passed", "keywords": ["test_cost_tracking_for_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00023091600000002543, "outcome": "passed"}, "call": {"duration": 0.00032812500000001243, "outcome": "passed"}, "teardown": {"duration": 0.00011837499999989287, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "lineno": 146, "outcome": "passed", "keywords": ["test_real_time_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0018964999999999677, "outcome": "passed"}, "call": {"duration": 0.0001547080000000589, "outcome": "passed"}, "teardown": {"duration": 0.00010370900000000738, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "lineno": 163, "outcome": "passed", "keywords": ["test_batch_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017941670000000132, "outcome": "passed"}, "call": {"duration": 0.000128333000000036, "outcome": "passed"}, "teardown": {"duration": 9.120800000006479e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "lineno": 178, "outcome": "passed", "keywords": ["test_batch_result_processing", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016303749999999617, "outcome": "passed"}, "call": {"duration": 0.00012483299999999087, "outcome": "passed"}, "teardown": {"duration": 9.687499999999627e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "lineno": 194, "outcome": "passed", "keywords": ["test_summary_fallback_on_ai_refusal", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001787832999999961, "outcome": "passed"}, "call": {"duration": 0.0001296670000000555, "outcome": "passed"}, "teardown": {"duration": 9.19160000000252e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "lineno": 219, "outcome": "passed", "keywords": ["test_summary_length_validation", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015858300000004544, "outcome": "passed"}, "call": {"duration": 0.00011366699999992846, "outcome": "passed"}, "teardown": {"duration": 8.154199999999001e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "lineno": 231, "outcome": "passed", "keywords": ["test_summary_includes_key_information", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015366599999999675, "outcome": "passed"}, "call": {"duration": 0.00010970799999998615, "outcome": "passed"}, "teardown": {"duration": 8.329200000001258e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "lineno": 248, "outcome": "passed", "keywords": ["test_summary_prompt_cache_usage", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013495800000007385, "outcome": "passed"}, "call": {"duration": 0.00010916700000007662, "outcome": "passed"}, "teardown": {"duration": 7.579199999996344e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "lineno": 267, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013758299999999668, "outcome": "passed"}, "call": {"duration": 0.00010887500000000827, "outcome": "passed"}, "teardown": {"duration": 7.491700000006318e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "lineno": 284, "outcome": "passed", "keywords": ["test_summarization_rate_limit", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013525000000003118, "outcome": "passed"}, "call": {"duration": 0.00010904199999994812, "outcome": "passed"}, "teardown": {"duration": 7.999999999996898e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "lineno": 27, "outcome": "passed", "keywords": ["test_new_article_creates_new_cluster", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002226999999999979, "outcome": "passed"}, "call": {"duration": 0.0003134999999999666, "outcome": "passed"}, "teardown": {"duration": 8.095900000004708e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "lineno": 95, "outcome": "passed", "keywords": ["test_similar_article_clusters_with_existing", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016661669999999962, "outcome": "passed"}, "call": {"duration": 0.00025320799999994925, "outcome": "passed"}, "teardown": {"duration": 8.62910000000161e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "lineno": 134, "outcome": "passed", "keywords": ["test_duplicate_source_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016377090000000427, "outcome": "passed"}, "call": {"duration": 0.00011691599999996694, "outcome": "passed"}, "teardown": {"duration": 8.39580000000506e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "lineno": 167, "outcome": "passed", "keywords": ["test_cross_category_clustering_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016014169999999384, "outcome": "passed"}, "call": {"duration": 0.001121041999999961, "outcome": "passed"}, "teardown": {"duration": 7.987500000006253e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "lineno": 189, "outcome": "passed", "keywords": ["test_entity_based_matching", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016277080000000055, "outcome": "passed"}, "call": {"duration": 0.00016612500000001695, "outcome": "passed"}, "teardown": {"duration": 8.112500000001521e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "lineno": 221, "outcome": "passed", "keywords": ["test_full_rss_to_cluster_pipeline", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0022040000000000948, "outcome": "passed"}, "call": {"duration": 0.0010318749999999044, "outcome": "passed"}, "teardown": {"duration": 8.500000000000174e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "lineno": 260, "outcome": "passed", "keywords": ["test_multiple_articles_same_story", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016074169999999999, "outcome": "passed"}, "call": {"duration": 0.00023574999999997903, "outcome": "passed"}, "teardown": {"duration": 8.150000000006763e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "lineno": 291, "outcome": "passed", "keywords": ["test_story_status_progression", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016184169999999831, "outcome": "passed"}, "call": {"duration": 0.00011558300000003019, "outcome": "passed"}, "teardown": {"duration": 8.620900000000375e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "lineno": 321, "outcome": "passed", "keywords": ["test_invalid_feed_handling", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014329199999996156, "outcome": "passed"}, "call": {"duration": 0.00040595799999998405, "outcome": "passed"}, "teardown": {"duration": 8.60000000000305e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "lineno": 334, "outcome": "passed", "keywords": ["test_missing_required_fields", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014574999999994454, "outcome": "passed"}, "call": {"duration": 0.00011474999999994129, "outcome": "passed"}, "teardown": {"duration": 7.599999999996498e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "lineno": 350, "outcome": "passed", "keywords": ["test_html_cleaning_in_pipeline", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013895799999996683, "outcome": "passed"}, "call": {"duration": 0.00011645800000004147, "outcome": "passed"}, "teardown": {"duration": 8.541699999997654e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "lineno": 372, "outcome": "passed", "keywords": ["test_clustering_100_articles", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001690290999999955, "outcome": "passed"}, "call": {"duration": 0.0010977500000000084, "outcome": "passed"}, "teardown": {"duration": 8.337499999999665e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "lineno": 401, "outcome": "passed", "keywords": ["test_fuzzy_matching_performance", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013737499999999514, "outcome": "passed"}, "call": {"duration": 0.04351616700000005, "outcome": "passed"}, "teardown": {"duration": 0.00011854199999994375, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "lineno": 24, "outcome": "passed", "keywords": ["test_api_is_reachable", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00018220800000001702, "outcome": "passed"}, "call": {"duration": 0.7236387079999999, "outcome": "passed"}, "teardown": {"duration": 0.00014004200000017342, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "lineno": 32, "outcome": "failed", "keywords": ["test_stories_endpoint_returns_data", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00020166599999993373, "outcome": "passed"}, "call": {"duration": 0.6940235419999998, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 37, "message": "AssertionError: Endpoint returned 403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 37, "message": "in test_stories_endpoint_returns_data"}], "longrepr": "system/test_deployed_api.py:37: in test_stories_endpoint_returns_data\n    assert response.status_code == 200, f\"Endpoint returned {response.status_code}\"\nE   AssertionError: Endpoint returned 403\nE   assert 403 == 200\nE    +  where 403 = <Response [403]>.status_code"}, "teardown": {"duration": 0.00014175000000005156, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "lineno": 52, "outcome": "failed", "keywords": ["test_stories_are_recent", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019054199999990473, "outcome": "passed"}, "call": {"duration": 0.5939872090000002, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 59, "message": "AssertionError: No stories to check\nassert 0 > 0\n +  where 0 = len([])"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 59, "message": "in test_stories_are_recent"}], "longrepr": "system/test_deployed_api.py:59: in test_stories_are_recent\n    assert len(stories) > 0, \"No stories to check\"\nE   AssertionError: No stories to check\nE   assert 0 > 0\nE    +  where 0 = len([])"}, "teardown": {"duration": 0.00013329100000003535, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "lineno": 91, "outcome": "skipped", "keywords": ["test_articles_are_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019816700000019338, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 92, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 9.462500000001484e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "lineno": 120, "outcome": "skipped", "keywords": ["test_rss_ingestion_rate", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00015687499999961219, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 121, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.275000000024235e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "lineno": 148, "outcome": "skipped", "keywords": ["test_multiple_sources_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00015641599999982603, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 149, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.00014908300000016084, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "lineno": 191, "outcome": "skipped", "keywords": ["test_stories_are_being_created", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001537090000001129, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 192, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.245900000014572e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "lineno": 216, "outcome": "skipped", "keywords": ["test_stories_have_multiple_sources", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00015329200000024912, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 217, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.450000000026492e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "lineno": 263, "outcome": "skipped", "keywords": ["test_summaries_are_being_generated", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.000161957999999629, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 264, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.00011808299999982452, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "lineno": 289, "outcome": "skipped", "keywords": ["test_summary_coverage_rate", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00024954199999971394, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 290, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 9.38340000002924e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "lineno": 338, "outcome": "failed", "keywords": ["test_function_app_is_deployed", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001357079999997346, "outcome": "passed"}, "call": {"duration": 0.18645375000000008, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 349, "message": "Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108e24fd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 349, "message": "in test_function_app_is_deployed"}], "longrepr": "../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:174: in _new_conn\n    conn = connection.create_connection(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/util/connection.py:72: in create_connection\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/socket.py:953: in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE   socket.gaierror: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:716: in urlopen\n    httplib_response = self._make_request(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:404: in _make_request\n    self._validate_conn(conn)\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1061: in _validate_conn\n    conn.connect()\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:363: in connect\n    self.sock = conn = self._new_conn()\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:186: in _new_conn\n    raise NewConnectionError(\nE   urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x108e24fd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\n../../../../../../Python/3.9/lib/python/site-packages/requests/adapters.py:486: in send\n    resp = conn.urlopen(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:802: in urlopen\n    retries = retries.increment(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/util/retry.py:594: in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108e24fd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nsystem/test_deployed_api.py:345: in test_function_app_is_deployed\n    response = requests.get(function_url, timeout=10)\n../../../../../../Python/3.9/lib/python/site-packages/requests/api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/sessions.py:589: in request\n    resp = self.send(prep, **send_kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/sessions.py:703: in send\n    r = adapter.send(request, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/adapters.py:519: in send\n    raise ConnectionError(e, request=request)\nE   requests.exceptions.ConnectionError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108e24fd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nsystem/test_deployed_api.py:349: in test_function_app_is_deployed\n    pytest.fail(f\"\u274c Function App not reachable: {e}\")\nE   Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108e24fd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "teardown": {"duration": 0.00015883299999996936, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "lineno": 352, "outcome": "skipped", "keywords": ["test_rss_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00017166599999995924, "outcome": "passed"}, "call": {"duration": 8.14579999999232e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 357, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 8.574999999977351e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "lineno": 358, "outcome": "skipped", "keywords": ["test_clustering_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.000143667000000125, "outcome": "passed"}, "call": {"duration": 7.129099999980681e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 361, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 8.458400000010968e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "lineno": 17, "outcome": "passed", "keywords": ["test_identical_titles_high_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013108299999986528, "outcome": "passed"}, "call": {"duration": 8.570899999993387e-05, "outcome": "passed"}, "teardown": {"duration": 8.541700000019858e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "lineno": 23, "outcome": "passed", "keywords": ["test_very_similar_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012675000000017533, "outcome": "passed"}, "call": {"duration": 7.216699999990084e-05, "outcome": "passed"}, "teardown": {"duration": 7.91669999999911e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "lineno": 30, "outcome": "passed", "keywords": ["test_related_but_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013074999999984627, "outcome": "passed"}, "call": {"duration": 7.54999999998951e-05, "outcome": "passed"}, "teardown": {"duration": 7.879200000004971e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "lineno": 37, "outcome": "passed", "keywords": ["test_unrelated_titles_low_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012670799999980886, "outcome": "passed"}, "call": {"duration": 7.33339999996474e-05, "outcome": "passed"}, "teardown": {"duration": 8.033399999973767e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "lineno": 44, "outcome": "passed", "keywords": ["test_completely_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012683299999993736, "outcome": "passed"}, "call": {"duration": 7.129199999988955e-05, "outcome": "passed"}, "teardown": {"duration": 7.966599999997825e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "lineno": 51, "outcome": "passed", "keywords": ["test_similarity_with_word_order_change", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001287500000000108, "outcome": "passed"}, "call": {"duration": 7.237500000023545e-05, "outcome": "passed"}, "teardown": {"duration": 7.925000000019722e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "lineno": 58, "outcome": "passed", "keywords": ["test_similarity_case_insensitive", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012662500000004684, "outcome": "passed"}, "call": {"duration": 7.116699999976106e-05, "outcome": "passed"}, "teardown": {"duration": 8.208399999976024e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "lineno": 65, "outcome": "passed", "keywords": ["test_similarity_with_extra_words", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001267089999998916, "outcome": "passed"}, "call": {"duration": 0.00013516700000026916, "outcome": "passed"}, "teardown": {"duration": 8.07499999999628e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "lineno": 78, "outcome": "passed", "keywords": ["test_crime_vs_health_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012649999999991834, "outcome": "passed"}, "call": {"duration": 7.816699999985133e-05, "outcome": "passed"}, "teardown": {"duration": 7.637499999990638e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "lineno": 84, "outcome": "passed", "keywords": ["test_politics_vs_sports_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012620800000018306, "outcome": "passed"}, "call": {"duration": 7.558400000018395e-05, "outcome": "passed"}, "teardown": {"duration": 7.891600000009547e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "lineno": 90, "outcome": "passed", "keywords": ["test_business_vs_weather_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012570900000019591, "outcome": "passed"}, "call": {"duration": 7.483300000021842e-05, "outcome": "passed"}, "teardown": {"duration": 7.733300000012377e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "lineno": 96, "outcome": "passed", "keywords": ["test_same_topic_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012474999999989578, "outcome": "passed"}, "call": {"duration": 7.370799999995015e-05, "outcome": "passed"}, "teardown": {"duration": 7.754200000009703e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "lineno": 102, "outcome": "passed", "keywords": ["test_no_topic_keywords_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012629099999994509, "outcome": "passed"}, "call": {"duration": 7.554199999981748e-05, "outcome": "passed"}, "teardown": {"duration": 8.149999999984558e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "lineno": 108, "outcome": "passed", "keywords": ["test_one_topic_vs_none_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012920900000024105, "outcome": "passed"}, "call": {"duration": 7.329100000008637e-05, "outcome": "passed"}, "teardown": {"duration": 9.304200000004315e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "lineno": 114, "outcome": "passed", "keywords": ["test_medical_vs_political_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001249579999997863, "outcome": "passed"}, "call": {"duration": 8.904200000037221e-05, "outcome": "passed"}, "teardown": {"duration": 7.862499999999883e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "lineno": 125, "outcome": "passed", "keywords": ["test_threshold_75_percent", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001229999999998732, "outcome": "passed"}, "call": {"duration": 8.412500000032352e-05, "outcome": "passed"}, "teardown": {"duration": 8.249999999998536e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "lineno": 145, "outcome": "passed", "keywords": ["test_edge_cases_near_threshold", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001245829999998449, "outcome": "passed"}, "call": {"duration": 7.008300000022061e-05, "outcome": "passed"}, "teardown": {"duration": 8.370800000001566e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "lineno": 160, "outcome": "passed", "keywords": ["test_exact_match_via_fingerprint", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013037499999990487, "outcome": "passed"}, "call": {"duration": 8.850000000037994e-05, "outcome": "passed"}, "teardown": {"duration": 7.950000000001012e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "lineno": 175, "outcome": "passed", "keywords": ["test_fuzzy_match_required_for_variations", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013029199999969876, "outcome": "passed"}, "call": {"duration": 7.683300000005389e-05, "outcome": "passed"}, "teardown": {"duration": 8.054200000007228e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "lineno": 184, "outcome": "passed", "keywords": ["test_no_match_for_different_events", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012512500000028126, "outcome": "passed"}, "call": {"duration": 7.995800000015763e-05, "outcome": "passed"}, "teardown": {"duration": 7.958300000021623e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "lineno": 199, "outcome": "passed", "keywords": ["test_extract_source_from_article_id", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012645799999999596, "outcome": "passed"}, "call": {"duration": 6.12909999997413e-05, "outcome": "passed"}, "teardown": {"duration": 7.795800000032216e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "lineno": 205, "outcome": "passed", "keywords": ["test_identify_duplicate_sources_in_cluster", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012941599999960474, "outcome": "passed"}, "call": {"duration": 7.083299999965931e-05, "outcome": "passed"}, "teardown": {"duration": 7.895900000010059e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "lineno": 224, "outcome": "passed", "keywords": ["test_unique_sources_only", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012629200000002783, "outcome": "passed"}, "call": {"duration": 6.37919999997294e-05, "outcome": "passed"}, "teardown": {"duration": 8.337499999999665e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "lineno": 242, "outcome": "passed", "keywords": ["test_similarity_calculation_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012437499999995438, "outcome": "passed"}, "call": {"duration": 0.0008595420000001575, "outcome": "passed"}, "teardown": {"duration": 7.899999999994023e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "lineno": 257, "outcome": "passed", "keywords": ["test_topic_conflict_check_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012570800000011317, "outcome": "passed"}, "call": {"duration": 0.006693583000000114, "outcome": "passed"}, "teardown": {"duration": 8.033300000009902e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "lineno": 22, "outcome": "passed", "keywords": ["test_clean_simple_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012170799999999815, "outcome": "passed"}, "call": {"duration": 7.41670000001804e-05, "outcome": "passed"}, "teardown": {"duration": 8.266700000003624e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "lineno": 28, "outcome": "passed", "keywords": ["test_clean_nested_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012558400000006742, "outcome": "passed"}, "call": {"duration": 6.687499999991076e-05, "outcome": "passed"}, "teardown": {"duration": 8.091700000001367e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "lineno": 34, "outcome": "passed", "keywords": ["test_clean_html_entities", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012725000000024522, "outcome": "passed"}, "call": {"duration": 7.858400000015919e-05, "outcome": "passed"}, "teardown": {"duration": 8.316700000010613e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "lineno": 41, "outcome": "passed", "keywords": ["test_clean_with_newlines", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012645799999999596, "outcome": "passed"}, "call": {"duration": 6.479199999986918e-05, "outcome": "passed"}, "teardown": {"duration": 7.849999999987034e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "lineno": 48, "outcome": "passed", "keywords": ["test_clean_empty_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012641699999971223, "outcome": "passed"}, "call": {"duration": 6.60829999996615e-05, "outcome": "passed"}, "teardown": {"duration": 8.020799999997053e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "lineno": 59, "outcome": "passed", "keywords": ["test_extract_location_entities", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012666699999996922, "outcome": "passed"}, "call": {"duration": 9.108400000013006e-05, "outcome": "passed"}, "teardown": {"duration": 8.095799999985331e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "lineno": 71, "outcome": "passed", "keywords": ["test_extract_from_empty_text", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001269170000002262, "outcome": "passed"}, "call": {"duration": 6.374999999980702e-05, "outcome": "passed"}, "teardown": {"duration": 7.937499999988162e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "lineno": 76, "outcome": "passed", "keywords": ["test_extract_with_special_characters", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012579199999995794, "outcome": "passed"}, "call": {"duration": 7.187500000016556e-05, "outcome": "passed"}, "teardown": {"duration": 7.979200000018949e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "lineno": 87, "outcome": "passed", "keywords": ["test_categorize_tech_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012562500000035115, "outcome": "passed"}, "call": {"duration": 9.633300000011502e-05, "outcome": "passed"}, "teardown": {"duration": 8.162499999997408e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "lineno": 94, "outcome": "passed", "keywords": ["test_categorize_business_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00016033300000017903, "outcome": "passed"}, "call": {"duration": 0.00011637499999972434, "outcome": "passed"}, "teardown": {"duration": 7.141700000001805e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "lineno": 101, "outcome": "passed", "keywords": ["test_categorize_health_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001424590000000947, "outcome": "passed"}, "call": {"duration": 9.666699999977268e-05, "outcome": "passed"}, "teardown": {"duration": 7.312500000011823e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "lineno": 108, "outcome": "passed", "keywords": ["test_categorize_sports_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012237499999967483, "outcome": "passed"}, "call": {"duration": 8.883299999995486e-05, "outcome": "passed"}, "teardown": {"duration": 7.333300000000875e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "lineno": 115, "outcome": "passed", "keywords": ["test_categorize_fallback_to_general", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011954100000011181, "outcome": "passed"}, "call": {"duration": 8.35839999999699e-05, "outcome": "passed"}, "teardown": {"duration": 7.212499999997846e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "lineno": 127, "outcome": "passed", "keywords": ["test_detect_product_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012008300000010408, "outcome": "passed"}, "call": {"duration": 0.00036300000000011323, "outcome": "passed"}, "teardown": {"duration": 7.3208999999963e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "lineno": 134, "outcome": "passed", "keywords": ["test_detect_sponsored_content", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012045800000004547, "outcome": "passed"}, "call": {"duration": 0.00010758399999977186, "outcome": "passed"}, "teardown": {"duration": 7.34589999997759e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "lineno": 141, "outcome": "passed", "keywords": ["test_legitimate_article_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011674999999966573, "outcome": "passed"}, "call": {"duration": 0.0006870000000001042, "outcome": "passed"}, "teardown": {"duration": 7.39169999999234e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "lineno": 148, "outcome": "passed", "keywords": ["test_news_about_products_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012091699999983163, "outcome": "passed"}, "call": {"duration": 8.499999999989072e-05, "outcome": "passed"}, "teardown": {"duration": 7.233300000031306e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "lineno": 162, "outcome": "passed", "keywords": ["test_truncate_long_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013054199999995575, "outcome": "passed"}, "call": {"duration": 0.0001381670000002444, "outcome": "passed"}, "teardown": {"duration": 8.158400000013444e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "lineno": 168, "outcome": "passed", "keywords": ["test_truncate_short_text_unchanged", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012833299999970293, "outcome": "passed"}, "call": {"duration": 6.516699999981057e-05, "outcome": "passed"}, "teardown": {"duration": 7.987499999995151e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "lineno": 174, "outcome": "passed", "keywords": ["test_truncate_at_word_boundary", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001277500000003151, "outcome": "passed"}, "call": {"duration": 6.650000000041345e-05, "outcome": "passed"}, "teardown": {"duration": 7.858400000015919e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "lineno": 181, "outcome": "passed", "keywords": ["test_truncate_empty_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.000128250000000385, "outcome": "passed"}, "call": {"duration": 6.420900000003726e-05, "outcome": "passed"}, "teardown": {"duration": 8.14579999999232e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "lineno": 191, "outcome": "passed", "keywords": ["test_generate_article_id", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012916699999987458, "outcome": "passed"}, "call": {"duration": 8.612500000015899e-05, "outcome": "passed"}, "teardown": {"duration": 8.000000000008001e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "lineno": 206, "outcome": "passed", "keywords": ["test_generate_different_ids_for_different_urls", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001281670000001789, "outcome": "passed"}, "call": {"duration": 7.21659999998181e-05, "outcome": "passed"}, "teardown": {"duration": 7.983300000002913e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "lineno": 222, "outcome": "passed", "keywords": ["test_generate_story_fingerprint", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012516599999967681, "outcome": "passed"}, "call": {"duration": 7.287499999986125e-05, "outcome": "passed"}, "teardown": {"duration": 8.283300000000438e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "lineno": 237, "outcome": "passed", "keywords": ["test_fingerprint_consistency", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014337499999994563, "outcome": "passed"}, "call": {"duration": 7.90420000003067e-05, "outcome": "passed"}, "teardown": {"duration": 7.937499999988162e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "lineno": 246, "outcome": "passed", "keywords": ["test_fingerprint_different_for_different_titles", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012750000000005812, "outcome": "passed"}, "call": {"duration": 7.620800000029959e-05, "outcome": "passed"}, "teardown": {"duration": 7.862499999999883e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "lineno": 256, "outcome": "passed", "keywords": ["test_fingerprint_normalizes_case", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012754099999989776, "outcome": "passed"}, "call": {"duration": 7.116699999976106e-05, "outcome": "passed"}, "teardown": {"duration": 7.937500000032571e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "lineno": 271, "outcome": "passed", "keywords": ["test_parse_rfc822_date", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013100000000010326, "outcome": "passed"}, "call": {"duration": 7.854100000015407e-05, "outcome": "passed"}, "teardown": {"duration": 7.812499999992895e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "lineno": 284, "outcome": "passed", "keywords": ["test_parse_missing_date_returns_now", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012783300000007713, "outcome": "passed"}, "call": {"duration": 7.787500000011605e-05, "outcome": "passed"}, "teardown": {"duration": 0.00042779099999989967, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}]}