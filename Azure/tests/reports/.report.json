{"created": 1761449461.413676, "duration": 1.9380199909210205, "exitcode": 1, "root": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests", "environment": {}, "summary": {"passed": 108, "failed": 6, "skipped": 9, "total": 123, "collected": 123}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "integration/__init__.py", "type": "Package"}, {"nodeid": "system/test_deployed_api.py", "type": "Module"}, {"nodeid": "unit/test_clustering_logic.py", "type": "Module"}, {"nodeid": "unit/test_rss_parsing.py", "type": "Module"}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "type": "Function", "lineno": 49}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "type": "Function", "lineno": 71}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "type": "Function", "lineno": 104}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "type": "Function", "lineno": 119}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "type": "Function", "lineno": 155}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "type": "Function", "lineno": 179}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "type": "Function", "lineno": 190}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "type": "Function", "lineno": 209}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "type": "Function", "lineno": 229}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "type": "Function", "lineno": 268}]}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "type": "Function", "lineno": 294}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "type": "Function", "lineno": 307}]}, {"nodeid": "integration/test_batch_processing.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End", "type": "Class"}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance", "type": "Class"}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "type": "Function", "lineno": 50}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "type": "Function", "lineno": 72}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "type": "Function", "lineno": 98}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "type": "Function", "lineno": 118}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "type": "Function", "lineno": 142}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "type": "Function", "lineno": 159}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "type": "Function", "lineno": 182}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "type": "Function", "lineno": 201}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "type": "Function", "lineno": 221}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "type": "Function", "lineno": 287}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "type": "Function", "lineno": 306}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "type": "Function", "lineno": 333}]}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "outcome": "passed", "result": [{"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration", "type": "Class"}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance", "type": "Class"}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "type": "Function", "lineno": 21}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "type": "Function", "lineno": 37}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "type": "Function", "lineno": 55}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "type": "Function", "lineno": 83}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "type": "Function", "lineno": 99}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "type": "Function", "lineno": 122}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "type": "Function", "lineno": 146}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "type": "Function", "lineno": 163}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "type": "Function", "lineno": 178}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "type": "Function", "lineno": 194}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "type": "Function", "lineno": 219}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "type": "Function", "lineno": 231}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "type": "Function", "lineno": 248}]}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "type": "Function", "lineno": 267}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "type": "Function", "lineno": 284}]}, {"nodeid": "integration/test_clustering_to_summarization.py", "outcome": "passed", "result": [{"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality", "type": "Class"}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance", "type": "Class"}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "type": "Function", "lineno": 27}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "type": "Function", "lineno": 95}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "type": "Function", "lineno": 134}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "type": "Function", "lineno": 167}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "type": "Function", "lineno": 189}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "type": "Function", "lineno": 221}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "type": "Function", "lineno": 260}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "type": "Function", "lineno": 291}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "type": "Function", "lineno": 321}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "type": "Function", "lineno": 334}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "type": "Function", "lineno": 350}]}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "type": "Function", "lineno": 372}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "type": "Function", "lineno": 401}]}, {"nodeid": "integration/test_rss_to_clustering.py", "outcome": "passed", "result": [{"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality", "type": "Class"}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance", "type": "Class"}]}, {"nodeid": "integration/__init__.py", "outcome": "passed", "result": [{"nodeid": "integration/test_batch_processing.py", "type": "Module"}, {"nodeid": "integration/test_breaking_news_lifecycle.py", "type": "Module"}, {"nodeid": "integration/test_clustering_to_summarization.py", "type": "Module"}, {"nodeid": "integration/test_rss_to_clustering.py", "type": "Module"}]}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "type": "Function", "lineno": 32}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "type": "Function", "lineno": 40}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "type": "Function", "lineno": 60}]}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "type": "Function", "lineno": 99}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "type": "Function", "lineno": 128}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "type": "Function", "lineno": 156}]}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "type": "Function", "lineno": 199}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "type": "Function", "lineno": 224}]}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "type": "Function", "lineno": 271}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "type": "Function", "lineno": 297}]}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "type": "Function", "lineno": 346}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "type": "Function", "lineno": 360}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "type": "Function", "lineno": 366}]}, {"nodeid": "system/test_deployed_api.py", "outcome": "passed", "result": [{"nodeid": "system/test_deployed_api.py::TestDeployedAPI", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAISummarization", "type": "Class"}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions", "type": "Class"}]}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "type": "Function", "lineno": 17}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "type": "Function", "lineno": 23}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "type": "Function", "lineno": 30}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "type": "Function", "lineno": 37}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "type": "Function", "lineno": 44}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "type": "Function", "lineno": 51}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "type": "Function", "lineno": 58}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "type": "Function", "lineno": 65}]}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "type": "Function", "lineno": 78}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "type": "Function", "lineno": 84}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "type": "Function", "lineno": 90}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "type": "Function", "lineno": 96}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "type": "Function", "lineno": 102}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "type": "Function", "lineno": 114}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "type": "Function", "lineno": 125}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "type": "Function", "lineno": 145}]}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "type": "Function", "lineno": 160}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "type": "Function", "lineno": 175}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "type": "Function", "lineno": 184}]}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "type": "Function", "lineno": 199}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "type": "Function", "lineno": 205}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "type": "Function", "lineno": 224}]}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "type": "Function", "lineno": 242}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "type": "Function", "lineno": 257}]}, {"nodeid": "unit/test_clustering_logic.py", "outcome": "passed", "result": [{"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention", "type": "Class"}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance", "type": "Class"}]}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "type": "Function", "lineno": 22}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "type": "Function", "lineno": 28}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "type": "Function", "lineno": 34}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "type": "Function", "lineno": 41}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "type": "Function", "lineno": 48}]}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "type": "Function", "lineno": 59}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "type": "Function", "lineno": 71}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "type": "Function", "lineno": 76}]}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "type": "Function", "lineno": 87}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "type": "Function", "lineno": 94}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "type": "Function", "lineno": 101}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "type": "Function", "lineno": 108}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "type": "Function", "lineno": 115}]}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "type": "Function", "lineno": 127}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "type": "Function", "lineno": 134}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "type": "Function", "lineno": 141}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "type": "Function", "lineno": 148}]}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "type": "Function", "lineno": 162}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "type": "Function", "lineno": 168}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "type": "Function", "lineno": 174}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "type": "Function", "lineno": 181}]}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "type": "Function", "lineno": 191}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "type": "Function", "lineno": 206}]}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "type": "Function", "lineno": 222}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "type": "Function", "lineno": 237}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "type": "Function", "lineno": 246}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "type": "Function", "lineno": 256}]}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "type": "Function", "lineno": 271}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "type": "Function", "lineno": 284}]}, {"nodeid": "unit/test_rss_parsing.py", "outcome": "passed", "result": [{"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting", "type": "Class"}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing", "type": "Class"}]}], "tests": [{"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_creation_from_unsummarized_stories", "lineno": 21, "outcome": "passed", "keywords": ["test_batch_creation_from_unsummarized_stories", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0032728750000000084, "outcome": "passed"}, "call": {"duration": 0.00026925000000005417, "outcome": "passed"}, "teardown": {"duration": 9.741700000004405e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_size_limits", "lineno": 49, "outcome": "passed", "keywords": ["test_batch_size_limits", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016369579999999662, "outcome": "passed"}, "call": {"duration": 0.00014462500000000933, "outcome": "passed"}, "teardown": {"duration": 9.466700000004824e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchSubmission::test_batch_request_format", "lineno": 71, "outcome": "passed", "keywords": ["test_batch_request_format", "asyncio", "pytestmark", "integration", "TestBatchSubmission", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017245800000004197, "outcome": "passed"}, "call": {"duration": 0.00011737499999997514, "outcome": "passed"}, "teardown": {"duration": 8.67920000000022e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_status_polling", "lineno": 104, "outcome": "passed", "keywords": ["test_batch_status_polling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0020639580000000324, "outcome": "passed"}, "call": {"duration": 0.0001567499999999833, "outcome": "passed"}, "teardown": {"duration": 0.00011058299999999743, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_completion_detection", "lineno": 119, "outcome": "passed", "keywords": ["test_batch_completion_detection", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017427500000000151, "outcome": "passed"}, "call": {"duration": 0.00013033400000000972, "outcome": "passed"}, "teardown": {"duration": 8.449999999998736e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_batch_result_extraction", "lineno": 134, "outcome": "passed", "keywords": ["test_batch_result_extraction", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016920799999997627, "outcome": "passed"}, "call": {"duration": 0.00014858299999997993, "outcome": "passed"}, "teardown": {"duration": 9.375000000000355e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchProcessing::test_partial_batch_failure_handling", "lineno": 155, "outcome": "passed", "keywords": ["test_partial_batch_failure_handling", "asyncio", "pytestmark", "integration", "TestBatchProcessing", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00015129099999999784, "outcome": "passed"}, "call": {"duration": 0.00011400000000000299, "outcome": "passed"}, "teardown": {"duration": 8.345799999998071e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_cost_calculation", "lineno": 179, "outcome": "failed", "keywords": ["test_batch_cost_calculation", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001624170000000258, "outcome": "passed"}, "call": {"duration": 0.00024570900000003837, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_batch_processing.py", "lineno": 189, "message": "assert 0.0015 == 0.015"}, "traceback": [{"path": "integration/test_batch_processing.py", "lineno": 189, "message": "in test_batch_cost_calculation"}], "longrepr": "integration/test_batch_processing.py:189: in test_batch_cost_calculation\n    assert batch['total_cost'] == 0.015  # As specified in fixture\nE   assert 0.0015 == 0.015"}, "teardown": {"duration": 0.00017087499999995925, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_batch_vs_realtime_cost_savings", "lineno": 190, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost_savings", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00017575000000003005, "outcome": "passed"}, "call": {"duration": 0.0001447499999999713, "outcome": "passed"}, "teardown": {"duration": 8.212500000004397e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchCostTracking::test_monthly_cost_projection", "lineno": 209, "outcome": "passed", "keywords": ["test_monthly_cost_projection", "asyncio", "pytestmark", "integration", "TestBatchCostTracking", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001426660000000135, "outcome": "passed"}, "call": {"duration": 0.0001147920000000302, "outcome": "passed"}, "teardown": {"duration": 7.829199999997982e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_complete_batch_workflow", "lineno": 229, "outcome": "passed", "keywords": ["test_complete_batch_workflow", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017457089999999842, "outcome": "passed"}, "call": {"duration": 0.00015083300000001687, "outcome": "passed"}, "teardown": {"duration": 8.587500000001302e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchWorkflowEnd2End::test_batch_retry_on_failure", "lineno": 268, "outcome": "passed", "keywords": ["test_batch_retry_on_failure", "asyncio", "pytestmark", "integration", "TestBatchWorkflowEnd2End", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014091700000001817, "outcome": "passed"}, "call": {"duration": 0.00011229100000004211, "outcome": "passed"}, "teardown": {"duration": 8.654099999999554e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_processing_latency", "lineno": 294, "outcome": "passed", "keywords": ["test_batch_processing_latency", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014449999999999186, "outcome": "passed"}, "call": {"duration": 0.00012145899999999044, "outcome": "passed"}, "teardown": {"duration": 7.80000000000225e-05, "outcome": "passed"}}, {"nodeid": "integration/test_batch_processing.py::TestBatchPerformance::test_batch_throughput", "lineno": 307, "outcome": "passed", "keywords": ["test_batch_throughput", "asyncio", "pytestmark", "integration", "TestBatchPerformance", "slow", "test_batch_processing.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013629199999998232, "outcome": "passed"}, "call": {"duration": 0.00011141700000000254, "outcome": "passed"}, "teardown": {"duration": 8.045899999997719e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_verified_to_breaking_transition", "lineno": 21, "outcome": "failed", "keywords": ["test_verified_to_breaking_transition", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016558750000000289, "outcome": "passed"}, "call": {"duration": 0.00012608299999999906, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 41, "message": "KeyError: 'first_seen'"}, "traceback": [{"path": "integration/test_breaking_news_lifecycle.py", "lineno": 41, "message": "in test_verified_to_breaking_transition"}], "longrepr": "integration/test_breaking_news_lifecycle.py:41: in test_verified_to_breaking_transition\n    first_seen = datetime.fromisoformat(story['first_seen'].replace('Z', '+00:00'))\nE   KeyError: 'first_seen'"}, "teardown": {"duration": 9.700000000001374e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_monitoring_to_breaking_skip_developing", "lineno": 50, "outcome": "passed", "keywords": ["test_monitoring_to_breaking_skip_developing", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015841249999999918, "outcome": "passed"}, "call": {"duration": 0.00012041599999995656, "outcome": "passed"}, "teardown": {"duration": 8.262500000000284e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsDetection::test_breaking_news_not_triggered_for_slow_stories", "lineno": 72, "outcome": "passed", "keywords": ["test_breaking_news_not_triggered_for_slow_stories", "asyncio", "pytestmark", "integration", "TestBreakingNewsDetection", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016223750000000092, "outcome": "passed"}, "call": {"duration": 0.00011987499999999152, "outcome": "passed"}, "teardown": {"duration": 8.695799999997034e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_triggered_on_breaking_status", "lineno": 98, "outcome": "passed", "keywords": ["test_notification_triggered_on_breaking_status", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016398750000000129, "outcome": "passed"}, "call": {"duration": 0.0001207500000000028, "outcome": "passed"}, "teardown": {"duration": 8.704200000003715e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_payload_structure", "lineno": 118, "outcome": "passed", "keywords": ["test_notification_payload_structure", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001563330000000085, "outcome": "passed"}, "call": {"duration": 0.00011191700000001692, "outcome": "passed"}, "teardown": {"duration": 8.649999999998936e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_deduplication", "lineno": 142, "outcome": "passed", "keywords": ["test_notification_deduplication", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002088833999999984, "outcome": "passed"}, "call": {"duration": 0.00011258299999999943, "outcome": "passed"}, "teardown": {"duration": 8.391699999998892e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsNotifications::test_notification_rate_limiting", "lineno": 159, "outcome": "passed", "keywords": ["test_notification_rate_limiting", "asyncio", "pytestmark", "integration", "TestBreakingNewsNotifications", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013370800000001015, "outcome": "passed"}, "call": {"duration": 0.00010908300000000981, "outcome": "passed"}, "teardown": {"duration": 7.87079999999829e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_breaking_to_verified_demotion", "lineno": 182, "outcome": "failed", "keywords": ["test_breaking_to_verified_demotion", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001591124999999971, "outcome": "passed"}, "call": {"duration": 0.00011945800000001672, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/integration/test_breaking_news_lifecycle.py", "lineno": 189, "message": "KeyError: 'breaking_triggered_at'"}, "traceback": [{"path": "integration/test_breaking_news_lifecycle.py", "lineno": 189, "message": "in test_breaking_to_verified_demotion"}], "longrepr": "integration/test_breaking_news_lifecycle.py:189: in test_breaking_to_verified_demotion\n    story['breaking_triggered_at'].replace('Z', '+00:00')\nE   KeyError: 'breaking_triggered_at'"}, "teardown": {"duration": 9.516599999997988e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_verified_to_archived_lifecycle", "lineno": 201, "outcome": "passed", "keywords": ["test_verified_to_archived_lifecycle", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015699160000000045, "outcome": "passed"}, "call": {"duration": 0.00012462500000004484, "outcome": "passed"}, "teardown": {"duration": 8.137499999999465e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsLifecycle::test_complete_story_lifecycle_flow", "lineno": 221, "outcome": "passed", "keywords": ["test_complete_story_lifecycle_flow", "asyncio", "pytestmark", "integration", "TestBreakingNewsLifecycle", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016043329999999578, "outcome": "passed"}, "call": {"duration": 0.00011525000000001118, "outcome": "passed"}, "teardown": {"duration": 8.258299999996943e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_trending_check", "lineno": 267, "outcome": "passed", "keywords": ["test_twitter_trending_check", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013799999999997148, "outcome": "passed"}, "call": {"duration": 0.00011133299999999124, "outcome": "passed"}, "teardown": {"duration": 8.47499999999668e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestTwitterBreakingNewsIntegration::test_twitter_volume_threshold", "lineno": 287, "outcome": "passed", "keywords": ["test_twitter_volume_threshold", "asyncio", "pytestmark", "integration", "TestTwitterBreakingNewsIntegration", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013766700000000798, "outcome": "passed"}, "call": {"duration": 0.00010937500000002265, "outcome": "passed"}, "teardown": {"duration": 8.374999999999355e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_breaking_news_detection_latency", "lineno": 306, "outcome": "passed", "keywords": ["test_breaking_news_detection_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0020400420000000197, "outcome": "passed"}, "call": {"duration": 0.00012004099999995965, "outcome": "passed"}, "teardown": {"duration": 8.266700000003624e-05, "outcome": "passed"}}, {"nodeid": "integration/test_breaking_news_lifecycle.py::TestBreakingNewsPerformance::test_notification_send_latency", "lineno": 333, "outcome": "passed", "keywords": ["test_notification_send_latency", "asyncio", "pytestmark", "integration", "TestBreakingNewsPerformance", "slow", "test_breaking_news_lifecycle.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00013529200000000907, "outcome": "passed"}, "call": {"duration": 0.00010950000000004012, "outcome": "passed"}, "teardown": {"duration": 8.441599999997607e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_verified_story_triggers_summarization", "lineno": 21, "outcome": "passed", "keywords": ["test_verified_story_triggers_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016581669999999882, "outcome": "passed"}, "call": {"duration": 0.00011166600000001026, "outcome": "passed"}, "teardown": {"duration": 8.204200000000439e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_developing_story_no_summarization", "lineno": 37, "outcome": "passed", "keywords": ["test_developing_story_no_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0015867910000000318, "outcome": "passed"}, "call": {"duration": 0.00011525000000001118, "outcome": "passed"}, "teardown": {"duration": 8.941699999998054e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_prompt_construction", "lineno": 55, "outcome": "passed", "keywords": ["test_summary_prompt_construction", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016100000000002224, "outcome": "passed"}, "call": {"duration": 0.00011495799999999834, "outcome": "passed"}, "teardown": {"duration": 8.583400000000685e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_summary_stored_in_cluster", "lineno": 83, "outcome": "passed", "keywords": ["test_summary_stored_in_cluster", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017022089999999546, "outcome": "passed"}, "call": {"duration": 0.00012212500000008397, "outcome": "passed"}, "teardown": {"duration": 9.479199999995469e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_headline_regeneration_on_source_addition", "lineno": 99, "outcome": "passed", "keywords": ["test_headline_regeneration_on_source_addition", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0022887499999999505, "outcome": "passed"}, "call": {"duration": 0.00013566700000000598, "outcome": "passed"}, "teardown": {"duration": 9.270900000002413e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestClusteringToSummarizationFlow::test_cost_tracking_for_summarization", "lineno": 122, "outcome": "passed", "keywords": ["test_cost_tracking_for_summarization", "asyncio", "pytestmark", "integration", "TestClusteringToSummarizationFlow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016466600000009102, "outcome": "passed"}, "call": {"duration": 0.0001140000000000585, "outcome": "passed"}, "teardown": {"duration": 9.220799999998253e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_real_time_summarization_flow", "lineno": 146, "outcome": "passed", "keywords": ["test_real_time_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016615420000000158, "outcome": "passed"}, "call": {"duration": 0.0001251249999999482, "outcome": "passed"}, "teardown": {"duration": 9.670799999994539e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_summarization_flow", "lineno": 163, "outcome": "passed", "keywords": ["test_batch_summarization_flow", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.001692165999999995, "outcome": "passed"}, "call": {"duration": 0.00012999999999996348, "outcome": "passed"}, "teardown": {"duration": 9.416699999997835e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_batch_result_processing", "lineno": 178, "outcome": "passed", "keywords": ["test_batch_result_processing", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016880420000000562, "outcome": "passed"}, "call": {"duration": 0.00014070899999996112, "outcome": "passed"}, "teardown": {"duration": 0.00010820799999999853, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationWorkflow::test_summary_fallback_on_ai_refusal", "lineno": 194, "outcome": "passed", "keywords": ["test_summary_fallback_on_ai_refusal", "asyncio", "pytestmark", "integration", "TestSummarizationWorkflow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017657500000000104, "outcome": "passed"}, "call": {"duration": 0.00012820899999999025, "outcome": "passed"}, "teardown": {"duration": 9.6333000000004e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_length_validation", "lineno": 219, "outcome": "passed", "keywords": ["test_summary_length_validation", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001651670000000216, "outcome": "passed"}, "call": {"duration": 0.00011179100000002773, "outcome": "passed"}, "teardown": {"duration": 8.404200000000639e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_includes_key_information", "lineno": 231, "outcome": "passed", "keywords": ["test_summary_includes_key_information", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016258300000004944, "outcome": "passed"}, "call": {"duration": 0.00011233399999999172, "outcome": "passed"}, "teardown": {"duration": 8.145800000003423e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationQuality::test_summary_prompt_cache_usage", "lineno": 248, "outcome": "passed", "keywords": ["test_summary_prompt_cache_usage", "asyncio", "pytestmark", "integration", "TestSummarizationQuality", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014312499999991068, "outcome": "passed"}, "call": {"duration": 0.00015645799999997045, "outcome": "passed"}, "teardown": {"duration": 0.00010350000000003412, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_batch_vs_realtime_cost", "lineno": 267, "outcome": "passed", "keywords": ["test_batch_vs_realtime_cost", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00016108300000006182, "outcome": "passed"}, "call": {"duration": 0.0001267500000000643, "outcome": "passed"}, "teardown": {"duration": 8.212500000004397e-05, "outcome": "passed"}}, {"nodeid": "integration/test_clustering_to_summarization.py::TestSummarizationPerformance::test_summarization_rate_limit", "lineno": 284, "outcome": "passed", "keywords": ["test_summarization_rate_limit", "asyncio", "pytestmark", "integration", "TestSummarizationPerformance", "slow", "test_clustering_to_summarization.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014216700000002636, "outcome": "passed"}, "call": {"duration": 0.0001147080000000189, "outcome": "passed"}, "teardown": {"duration": 8.350000000001412e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_new_article_creates_new_cluster", "lineno": 27, "outcome": "passed", "keywords": ["test_new_article_creates_new_cluster", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002401541000000007, "outcome": "passed"}, "call": {"duration": 0.0003374590000000399, "outcome": "passed"}, "teardown": {"duration": 9.829199999999982e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_similar_article_clusters_with_existing", "lineno": 95, "outcome": "passed", "keywords": ["test_similar_article_clusters_with_existing", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017095839999999862, "outcome": "passed"}, "call": {"duration": 0.00025287499999993024, "outcome": "passed"}, "teardown": {"duration": 9.087499999993476e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_duplicate_source_prevented", "lineno": 134, "outcome": "passed", "keywords": ["test_duplicate_source_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016406249999999512, "outcome": "passed"}, "call": {"duration": 0.0001571249999999802, "outcome": "passed"}, "teardown": {"duration": 0.00010395900000004232, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_cross_category_clustering_prevented", "lineno": 167, "outcome": "passed", "keywords": ["test_cross_category_clustering_prevented", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017197909999999705, "outcome": "passed"}, "call": {"duration": 0.0011311250000000106, "outcome": "passed"}, "teardown": {"duration": 9.75410000000343e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSToClusteringFlow::test_entity_based_matching", "lineno": 189, "outcome": "passed", "keywords": ["test_entity_based_matching", "asyncio", "pytestmark", "integration", "TestRSSToClusteringFlow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0017067499999999791, "outcome": "passed"}, "call": {"duration": 0.0001792090000000135, "outcome": "passed"}, "teardown": {"duration": 9.837499999998389e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_full_rss_to_cluster_pipeline", "lineno": 221, "outcome": "passed", "keywords": ["test_full_rss_to_cluster_pipeline", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.002265457999999998, "outcome": "passed"}, "call": {"duration": 0.0010722080000000744, "outcome": "passed"}, "teardown": {"duration": 9.195799999994758e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_multiple_articles_same_story", "lineno": 260, "outcome": "passed", "keywords": ["test_multiple_articles_same_story", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016348750000000356, "outcome": "passed"}, "call": {"duration": 0.0002469999999999972, "outcome": "passed"}, "teardown": {"duration": 8.004200000000239e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSProcessingPipeline::test_story_status_progression", "lineno": 291, "outcome": "passed", "keywords": ["test_story_status_progression", "asyncio", "pytestmark", "integration", "TestRSSProcessingPipeline", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016109579999999957, "outcome": "passed"}, "call": {"duration": 0.00011945899999998844, "outcome": "passed"}, "teardown": {"duration": 8.679099999997497e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_invalid_feed_handling", "lineno": 321, "outcome": "passed", "keywords": ["test_invalid_feed_handling", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014124999999998167, "outcome": "passed"}, "call": {"duration": 0.00034970899999997584, "outcome": "passed"}, "teardown": {"duration": 7.833400000001323e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_missing_required_fields", "lineno": 334, "outcome": "passed", "keywords": ["test_missing_required_fields", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001407079999999894, "outcome": "passed"}, "call": {"duration": 0.00011108399999992802, "outcome": "passed"}, "teardown": {"duration": 7.812500000003997e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSFeedQuality::test_html_cleaning_in_pipeline", "lineno": 350, "outcome": "passed", "keywords": ["test_html_cleaning_in_pipeline", "asyncio", "pytestmark", "integration", "TestRSSFeedQuality", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0001367079999999854, "outcome": "passed"}, "call": {"duration": 0.00011641700000009081, "outcome": "passed"}, "teardown": {"duration": 7.945899999994843e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_clustering_100_articles", "lineno": 372, "outcome": "passed", "keywords": ["test_clustering_100_articles", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.0016337090000000387, "outcome": "passed"}, "call": {"duration": 0.0011082089999999711, "outcome": "passed"}, "teardown": {"duration": 8.633300000004951e-05, "outcome": "passed"}}, {"nodeid": "integration/test_rss_to_clustering.py::TestRSSClusteringPerformance::test_fuzzy_matching_performance", "lineno": 401, "outcome": "passed", "keywords": ["test_fuzzy_matching_performance", "asyncio", "pytestmark", "integration", "TestRSSClusteringPerformance", "slow", "test_rss_to_clustering.py", "integration/__init__.py", "tests"], "setup": {"duration": 0.00014175000000005156, "outcome": "passed"}, "call": {"duration": 0.043708791000000025, "outcome": "passed"}, "teardown": {"duration": 0.00012195900000000481, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_api_is_reachable", "lineno": 32, "outcome": "passed", "keywords": ["test_api_is_reachable", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00018479099999990645, "outcome": "passed"}, "call": {"duration": 0.601171, "outcome": "passed"}, "teardown": {"duration": 0.00014783299999998611, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_endpoint_returns_data", "lineno": 40, "outcome": "failed", "keywords": ["test_stories_endpoint_returns_data", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00021899999999996922, "outcome": "passed"}, "call": {"duration": 0.5031550839999999, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 45, "message": "AssertionError: Endpoint returned 403\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 45, "message": "in test_stories_endpoint_returns_data"}], "longrepr": "system/test_deployed_api.py:45: in test_stories_endpoint_returns_data\n    assert response.status_code == 200, f\"Endpoint returned {response.status_code}\"\nE   AssertionError: Endpoint returned 403\nE   assert 403 == 200\nE    +  where 403 = <Response [403]>.status_code"}, "teardown": {"duration": 0.00019008399999997927, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestDeployedAPI::test_stories_are_recent", "lineno": 60, "outcome": "failed", "keywords": ["test_stories_are_recent", "TestDeployedAPI", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00023529199999994255, "outcome": "passed"}, "call": {"duration": 0.37229650000000025, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 67, "message": "AssertionError: No stories to check\nassert 0 > 0\n +  where 0 = len([])"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 67, "message": "in test_stories_are_recent"}], "longrepr": "system/test_deployed_api.py:67: in test_stories_are_recent\n    assert len(stories) > 0, \"No stories to check\"\nE   AssertionError: No stories to check\nE   assert 0 > 0\nE    +  where 0 = len([])"}, "teardown": {"duration": 0.0001345000000001484, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_articles_are_being_ingested", "lineno": 99, "outcome": "skipped", "keywords": ["test_articles_are_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0002049580000003104, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 100, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.0001022499999998594, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_rss_ingestion_rate", "lineno": 128, "outcome": "skipped", "keywords": ["test_rss_ingestion_rate", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00022737500000014066, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 129, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.00013299999999993872, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestRSSIngestion::test_multiple_sources_being_ingested", "lineno": 156, "outcome": "skipped", "keywords": ["test_multiple_sources_being_ingested", "TestRSSIngestion", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00019225000000000492, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 157, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 0.00017412500000002495, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_are_being_created", "lineno": 199, "outcome": "skipped", "keywords": ["test_stories_are_being_created", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00017587500000004752, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 200, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 9.649999999972181e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestStoryClustering::test_stories_have_multiple_sources", "lineno": 224, "outcome": "skipped", "keywords": ["test_stories_have_multiple_sources", "TestStoryClustering", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00015900000000002024, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 225, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.745799999987369e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summaries_are_being_generated", "lineno": 271, "outcome": "skipped", "keywords": ["test_summaries_are_being_generated", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.0001599169999999539, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 272, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.591699999982438e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAISummarization::test_summary_coverage_rate", "lineno": 297, "outcome": "skipped", "keywords": ["test_summary_coverage_rate", "TestAISummarization", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00022508299999968173, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 298, 'Skipped: Cosmos credentials not set')"}, "teardown": {"duration": 8.5874999999902e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_function_app_is_deployed", "lineno": 346, "outcome": "failed", "keywords": ["test_function_app_is_deployed", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00013491700000001217, "outcome": "passed"}, "call": {"duration": 0.012876959000000188, "outcome": "failed", "crash": {"path": "/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py", "lineno": 357, "message": "Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108c19bb0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "traceback": [{"path": "system/test_deployed_api.py", "lineno": 357, "message": "in test_function_app_is_deployed"}], "longrepr": "../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:174: in _new_conn\n    conn = connection.create_connection(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/util/connection.py:72: in create_connection\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/socket.py:953: in getaddrinfo\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\nE   socket.gaierror: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:716: in urlopen\n    httplib_response = self._make_request(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:404: in _make_request\n    self._validate_conn(conn)\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:1061: in _validate_conn\n    conn.connect()\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:363: in connect\n    self.sock = conn = self._new_conn()\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connection.py:186: in _new_conn\n    raise NewConnectionError(\nE   urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPSConnection object at 0x108c19bb0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known\n\nDuring handling of the above exception, another exception occurred:\n../../../../../../Python/3.9/lib/python/site-packages/requests/adapters.py:486: in send\n    resp = conn.urlopen(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/connectionpool.py:802: in urlopen\n    retries = retries.increment(\n../../../../../../Python/3.9/lib/python/site-packages/urllib3/util/retry.py:594: in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108c19bb0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nsystem/test_deployed_api.py:353: in test_function_app_is_deployed\n    response = requests.get(function_url, timeout=10)\n../../../../../../Python/3.9/lib/python/site-packages/requests/api.py:73: in get\n    return request(\"get\", url, params=params, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/sessions.py:589: in request\n    resp = self.send(prep, **send_kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/sessions.py:703: in send\n    r = adapter.send(request, **kwargs)\n../../../../../../Python/3.9/lib/python/site-packages/requests/adapters.py:519: in send\n    raise ConnectionError(e, request=request)\nE   requests.exceptions.ConnectionError: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108c19bb0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))\n\nDuring handling of the above exception, another exception occurred:\nsystem/test_deployed_api.py:357: in test_function_app_is_deployed\n    pytest.fail(f\"\u274c Function App not reachable: {e}\")\nE   Failed: \u274c Function App not reachable: HTTPSConnectionPool(host='newsreel-functions.azurewebsites.net', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0x108c19bb0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))"}, "teardown": {"duration": 0.00017733299999989072, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_rss_function_is_running", "lineno": 360, "outcome": "skipped", "keywords": ["test_rss_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00017208399999990576, "outcome": "passed"}, "call": {"duration": 8.158400000013444e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 365, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 8.654200000002277e-05, "outcome": "passed"}}, {"nodeid": "system/test_deployed_api.py::TestAzureFunctions::test_clustering_function_is_running", "lineno": 366, "outcome": "skipped", "keywords": ["test_clustering_function_is_running", "TestAzureFunctions", "system", "system/test_deployed_api.py", "tests"], "setup": {"duration": 0.00013500000000021828, "outcome": "passed"}, "call": {"duration": 6.979100000004124e-05, "outcome": "skipped", "longrepr": "('/Users/davemac/Library/CloudStorage/OneDrive-OneThumSoftware/One Thum Software/Newsreel/Azure/tests/system/test_deployed_api.py', 369, 'Skipped: Requires Application Insights integration')"}, "teardown": {"duration": 8.154200000021206e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_identical_titles_high_similarity", "lineno": 17, "outcome": "passed", "keywords": ["test_identical_titles_high_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013074999999984627, "outcome": "passed"}, "call": {"duration": 8.216699999996635e-05, "outcome": "passed"}, "teardown": {"duration": 8.09580000002974e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_very_similar_titles", "lineno": 23, "outcome": "passed", "keywords": ["test_very_similar_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012829100000022464, "outcome": "passed"}, "call": {"duration": 7.312500000011823e-05, "outcome": "passed"}, "teardown": {"duration": 7.912500000006872e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_related_but_different_titles", "lineno": 30, "outcome": "passed", "keywords": ["test_related_but_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001247079999999734, "outcome": "passed"}, "call": {"duration": 7.383299999963455e-05, "outcome": "passed"}, "teardown": {"duration": 7.966599999997825e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_unrelated_titles_low_similarity", "lineno": 37, "outcome": "passed", "keywords": ["test_unrelated_titles_low_similarity", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001286669999998047, "outcome": "passed"}, "call": {"duration": 7.229200000002933e-05, "outcome": "passed"}, "teardown": {"duration": 8.129099999987233e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_completely_different_titles", "lineno": 44, "outcome": "passed", "keywords": ["test_completely_different_titles", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012745800000013574, "outcome": "passed"}, "call": {"duration": 7.149999999978007e-05, "outcome": "passed"}, "teardown": {"duration": 8.01250000002085e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_word_order_change", "lineno": 51, "outcome": "passed", "keywords": ["test_similarity_with_word_order_change", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012629200000002783, "outcome": "passed"}, "call": {"duration": 7.229099999994659e-05, "outcome": "passed"}, "teardown": {"duration": 8.01250000002085e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_case_insensitive", "lineno": 58, "outcome": "passed", "keywords": ["test_similarity_case_insensitive", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012758299999982015, "outcome": "passed"}, "call": {"duration": 7.604199999988737e-05, "outcome": "passed"}, "teardown": {"duration": 8.166599999981372e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTextSimilarity::test_similarity_with_extra_words", "lineno": 65, "outcome": "passed", "keywords": ["test_similarity_with_extra_words", "unit", "TestTextSimilarity", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013225000000005593, "outcome": "passed"}, "call": {"duration": 0.00017120800000025582, "outcome": "passed"}, "teardown": {"duration": 9.45839999997311e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_crime_vs_health_conflict", "lineno": 78, "outcome": "passed", "keywords": ["test_crime_vs_health_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00014399999999969992, "outcome": "passed"}, "call": {"duration": 8.495900000005108e-05, "outcome": "passed"}, "teardown": {"duration": 8.737500000011167e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_politics_vs_sports_conflict", "lineno": 84, "outcome": "passed", "keywords": ["test_politics_vs_sports_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013141699999996703, "outcome": "passed"}, "call": {"duration": 7.924999999975313e-05, "outcome": "passed"}, "teardown": {"duration": 8.058300000035601e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_business_vs_weather_conflict", "lineno": 90, "outcome": "passed", "keywords": ["test_business_vs_weather_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012833299999970293, "outcome": "passed"}, "call": {"duration": 7.504200000019168e-05, "outcome": "passed"}, "teardown": {"duration": 7.854200000023681e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_same_topic_no_conflict", "lineno": 96, "outcome": "passed", "keywords": ["test_same_topic_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012708299999975026, "outcome": "passed"}, "call": {"duration": 7.520800000015981e-05, "outcome": "passed"}, "teardown": {"duration": 7.995900000024037e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_no_topic_keywords_no_conflict", "lineno": 102, "outcome": "passed", "keywords": ["test_no_topic_keywords_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012429099999966553, "outcome": "passed"}, "call": {"duration": 7.770800000006517e-05, "outcome": "passed"}, "teardown": {"duration": 7.970899999998338e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_one_topic_vs_none_no_conflict", "lineno": 108, "outcome": "passed", "keywords": ["test_one_topic_vs_none_no_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012520800000004328, "outcome": "passed"}, "call": {"duration": 7.51249999999537e-05, "outcome": "passed"}, "teardown": {"duration": 7.875000000012733e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestTopicConflictDetection::test_medical_vs_political_conflict", "lineno": 114, "outcome": "passed", "keywords": ["test_medical_vs_political_conflict", "unit", "TestTopicConflictDetection", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012704199999991062, "outcome": "passed"}, "call": {"duration": 7.45000000001994e-05, "outcome": "passed"}, "teardown": {"duration": 7.987499999995151e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_threshold_75_percent", "lineno": 125, "outcome": "passed", "keywords": ["test_threshold_75_percent", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001286249999998823, "outcome": "passed"}, "call": {"duration": 8.716600000013841e-05, "outcome": "passed"}, "teardown": {"duration": 8.337499999999665e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringThresholds::test_edge_cases_near_threshold", "lineno": 145, "outcome": "passed", "keywords": ["test_edge_cases_near_threshold", "unit", "TestClusteringThresholds", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013037500000034896, "outcome": "passed"}, "call": {"duration": 7.220799999974048e-05, "outcome": "passed"}, "teardown": {"duration": 8.029199999981529e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_exact_match_via_fingerprint", "lineno": 160, "outcome": "passed", "keywords": ["test_exact_match_via_fingerprint", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012954100000017732, "outcome": "passed"}, "call": {"duration": 8.712500000029877e-05, "outcome": "passed"}, "teardown": {"duration": 8.341699999991903e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_fuzzy_match_required_for_variations", "lineno": 175, "outcome": "passed", "keywords": ["test_fuzzy_match_required_for_variations", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0001264590000000787, "outcome": "passed"}, "call": {"duration": 7.72909999997573e-05, "outcome": "passed"}, "teardown": {"duration": 8.045899999986617e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestStoryMatching::test_no_match_for_different_events", "lineno": 184, "outcome": "passed", "keywords": ["test_no_match_for_different_events", "unit", "TestStoryMatching", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012724999999980113, "outcome": "passed"}, "call": {"duration": 8.35839999999699e-05, "outcome": "passed"}, "teardown": {"duration": 8.083300000016891e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_extract_source_from_article_id", "lineno": 199, "outcome": "passed", "keywords": ["test_extract_source_from_article_id", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012895899999998406, "outcome": "passed"}, "call": {"duration": 6.304199999984661e-05, "outcome": "passed"}, "teardown": {"duration": 8.054200000007228e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_identify_duplicate_sources_in_cluster", "lineno": 205, "outcome": "passed", "keywords": ["test_identify_duplicate_sources_in_cluster", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013050000000003337, "outcome": "passed"}, "call": {"duration": 7.237500000023545e-05, "outcome": "passed"}, "teardown": {"duration": 7.712500000023326e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestDuplicateSourcePrevention::test_unique_sources_only", "lineno": 224, "outcome": "passed", "keywords": ["test_unique_sources_only", "unit", "TestDuplicateSourcePrevention", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00012808399999997278, "outcome": "passed"}, "call": {"duration": 6.379099999964666e-05, "outcome": "passed"}, "teardown": {"duration": 7.895900000010059e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_similarity_calculation_is_fast", "lineno": 242, "outcome": "passed", "keywords": ["test_similarity_calculation_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.0002170409999999734, "outcome": "passed"}, "call": {"duration": 0.0008739169999998353, "outcome": "passed"}, "teardown": {"duration": 9.012499999982992e-05, "outcome": "passed"}}, {"nodeid": "unit/test_clustering_logic.py::TestClusteringPerformance::test_topic_conflict_check_is_fast", "lineno": 257, "outcome": "passed", "keywords": ["test_topic_conflict_check_is_fast", "unit", "TestClusteringPerformance", "unit/test_clustering_logic.py", "tests"], "setup": {"duration": 0.00013404200000000088, "outcome": "passed"}, "call": {"duration": 0.007046874999999897, "outcome": "passed"}, "teardown": {"duration": 0.00010408300000008808, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_simple_html", "lineno": 22, "outcome": "passed", "keywords": ["test_clean_simple_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001613749999997971, "outcome": "passed"}, "call": {"duration": 0.00010658299999999343, "outcome": "passed"}, "teardown": {"duration": 8.504100000017445e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_nested_html", "lineno": 28, "outcome": "passed", "keywords": ["test_clean_nested_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013470900000012165, "outcome": "passed"}, "call": {"duration": 7.470800000008992e-05, "outcome": "passed"}, "teardown": {"duration": 8.016700000013088e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_html_entities", "lineno": 34, "outcome": "passed", "keywords": ["test_clean_html_entities", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013525000000003118, "outcome": "passed"}, "call": {"duration": 9.104199999976359e-05, "outcome": "passed"}, "teardown": {"duration": 7.72909999997573e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_with_newlines", "lineno": 41, "outcome": "passed", "keywords": ["test_clean_with_newlines", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00015191700000016795, "outcome": "passed"}, "call": {"duration": 7.89589999996565e-05, "outcome": "passed"}, "teardown": {"duration": 7.658399999987964e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestHTMLCleaning::test_clean_empty_html", "lineno": 48, "outcome": "passed", "keywords": ["test_clean_empty_html", "unit", "TestHTMLCleaning", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012224999999999042, "outcome": "passed"}, "call": {"duration": 6.754200000003152e-05, "outcome": "passed"}, "teardown": {"duration": 7.795899999996081e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_location_entities", "lineno": 59, "outcome": "passed", "keywords": ["test_extract_location_entities", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.000124000000000013, "outcome": "passed"}, "call": {"duration": 0.00010525000000027873, "outcome": "passed"}, "teardown": {"duration": 7.783399999983232e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_from_empty_text", "lineno": 71, "outcome": "passed", "keywords": ["test_extract_from_empty_text", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001232500000001302, "outcome": "passed"}, "call": {"duration": 6.570800000016419e-05, "outcome": "passed"}, "teardown": {"duration": 7.374999999987253e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestEntityExtraction::test_extract_with_special_characters", "lineno": 76, "outcome": "passed", "keywords": ["test_extract_with_special_characters", "unit", "TestEntityExtraction", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00017191600000021623, "outcome": "passed"}, "call": {"duration": 9.816599999989961e-05, "outcome": "passed"}, "teardown": {"duration": 8.770800000013068e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_tech_article", "lineno": 87, "outcome": "passed", "keywords": ["test_categorize_tech_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00014729199999985454, "outcome": "passed"}, "call": {"duration": 0.00011608299999998906, "outcome": "passed"}, "teardown": {"duration": 0.00010229100000014313, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_business_article", "lineno": 94, "outcome": "passed", "keywords": ["test_categorize_business_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001820420000000489, "outcome": "passed"}, "call": {"duration": 9.437499999975785e-05, "outcome": "passed"}, "teardown": {"duration": 8.066700000020077e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_health_article", "lineno": 101, "outcome": "passed", "keywords": ["test_categorize_health_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001332920000001181, "outcome": "passed"}, "call": {"duration": 9.058300000042152e-05, "outcome": "passed"}, "teardown": {"duration": 7.945900000017048e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_sports_article", "lineno": 108, "outcome": "passed", "keywords": ["test_categorize_sports_article", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012599999999984846, "outcome": "passed"}, "call": {"duration": 8.945800000015325e-05, "outcome": "passed"}, "teardown": {"duration": 8.01669999996868e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestArticleCategorization::test_categorize_fallback_to_general", "lineno": 115, "outcome": "passed", "keywords": ["test_categorize_fallback_to_general", "unit", "TestArticleCategorization", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001282919999998633, "outcome": "passed"}, "call": {"duration": 8.5874999999902e-05, "outcome": "passed"}, "teardown": {"duration": 8.275000000024235e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_product_spam", "lineno": 127, "outcome": "passed", "keywords": ["test_detect_product_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012929200000000307, "outcome": "passed"}, "call": {"duration": 0.000375832999999659, "outcome": "passed"}, "teardown": {"duration": 9.129200000002058e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_detect_sponsored_content", "lineno": 134, "outcome": "passed", "keywords": ["test_detect_sponsored_content", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00019295799999996532, "outcome": "passed"}, "call": {"duration": 0.0001176250000001211, "outcome": "passed"}, "teardown": {"duration": 8.875000000019284e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_legitimate_article_not_spam", "lineno": 141, "outcome": "passed", "keywords": ["test_legitimate_article_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001349580000002959, "outcome": "passed"}, "call": {"duration": 0.0007288339999997895, "outcome": "passed"}, "teardown": {"duration": 8.579100000005724e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestSpamDetection::test_news_about_products_not_spam", "lineno": 148, "outcome": "passed", "keywords": ["test_news_about_products_not_spam", "unit", "TestSpamDetection", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013270800000020344, "outcome": "passed"}, "call": {"duration": 8.704100000000992e-05, "outcome": "passed"}, "teardown": {"duration": 8.249999999998536e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_long_text", "lineno": 162, "outcome": "passed", "keywords": ["test_truncate_long_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013549999999984408, "outcome": "passed"}, "call": {"duration": 0.00013691700000029172, "outcome": "passed"}, "teardown": {"duration": 8.254199999990774e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_short_text_unchanged", "lineno": 168, "outcome": "passed", "keywords": ["test_truncate_short_text_unchanged", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013041699999982725, "outcome": "passed"}, "call": {"duration": 6.712499999972366e-05, "outcome": "passed"}, "teardown": {"duration": 8.137500000016118e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_at_word_boundary", "lineno": 174, "outcome": "passed", "keywords": ["test_truncate_at_word_boundary", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001300830000001696, "outcome": "passed"}, "call": {"duration": 6.85420000001713e-05, "outcome": "passed"}, "teardown": {"duration": 7.770800000006517e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestTextTruncation::test_truncate_empty_text", "lineno": 181, "outcome": "passed", "keywords": ["test_truncate_empty_text", "unit", "TestTextTruncation", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012879199999993318, "outcome": "passed"}, "call": {"duration": 6.562499999995808e-05, "outcome": "passed"}, "teardown": {"duration": 8.400000000019503e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_article_id", "lineno": 191, "outcome": "passed", "keywords": ["test_generate_article_id", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012758399999990289, "outcome": "passed"}, "call": {"duration": 9.075000000002831e-05, "outcome": "passed"}, "teardown": {"duration": 8.112499999990419e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestIDGeneration::test_generate_different_ids_for_different_urls", "lineno": 206, "outcome": "passed", "keywords": ["test_generate_different_ids_for_different_urls", "unit", "TestIDGeneration", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00013029200000014285, "outcome": "passed"}, "call": {"duration": 7.39169999999234e-05, "outcome": "passed"}, "teardown": {"duration": 8.120900000019304e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_generate_story_fingerprint", "lineno": 222, "outcome": "passed", "keywords": ["test_generate_story_fingerprint", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001291249999999522, "outcome": "passed"}, "call": {"duration": 7.641700000027285e-05, "outcome": "passed"}, "teardown": {"duration": 8.26659999999535e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_consistency", "lineno": 237, "outcome": "passed", "keywords": ["test_fingerprint_consistency", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.000127416999999852, "outcome": "passed"}, "call": {"duration": 7.220900000026731e-05, "outcome": "passed"}, "teardown": {"duration": 7.674999999984777e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_different_for_different_titles", "lineno": 246, "outcome": "passed", "keywords": ["test_fingerprint_different_for_different_titles", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.0001238330000004062, "outcome": "passed"}, "call": {"duration": 7.558299999965712e-05, "outcome": "passed"}, "teardown": {"duration": 7.954100000029385e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestStoryFingerprinting::test_fingerprint_normalizes_case", "lineno": 256, "outcome": "passed", "keywords": ["test_fingerprint_normalizes_case", "unit", "TestStoryFingerprinting", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012591699999964234, "outcome": "passed"}, "call": {"duration": 8.404100000003467e-05, "outcome": "passed"}, "teardown": {"duration": 7.591700000020296e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_rfc822_date", "lineno": 271, "outcome": "passed", "keywords": ["test_parse_rfc822_date", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00011891699999999616, "outcome": "passed"}, "call": {"duration": 8.549999999996061e-05, "outcome": "passed"}, "teardown": {"duration": 7.40420000000519e-05, "outcome": "passed"}}, {"nodeid": "unit/test_rss_parsing.py::TestDateParsing::test_parse_missing_date_returns_now", "lineno": 284, "outcome": "passed", "keywords": ["test_parse_missing_date_returns_now", "unit", "TestDateParsing", "unit/test_rss_parsing.py", "tests"], "setup": {"duration": 0.00012412500000014148, "outcome": "passed"}, "call": {"duration": 7.59580000000426e-05, "outcome": "passed"}, "teardown": {"duration": 0.000423416999999926, "outcome": "passed"}}], "warnings": [{"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "config", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_config.py", "lineno": 271}, {"message": "`json_encoders` is deprecated. See https://docs.pydantic.dev/2.5/concepts/serialization/#custom-serializers for alternatives. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/davemac/Library/Python/3.9/lib/python/site-packages/pydantic/_internal/_generate_schema.py", "lineno": 252}]}